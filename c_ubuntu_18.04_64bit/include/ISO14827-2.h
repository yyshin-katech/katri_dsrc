/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.1, Date: 27-Dec-2018.
 */
#ifndef ISO14827_2_H
#define ISO14827_2_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtoersrc/asn1oer.h"
#include "rtpersrc/asn1per.h"

#include "DSRC.h"

/**
 * Header file for ASN.1 module ISO14827-2
 */
/**************************************************************/
/*                                                            */
/*  FrED                                                      */
/*                                                            */
/**************************************************************/
/*
FrED ::= INTEGER (0..4294967295)
                                   datexFrED-ConfirmPacket-nbr

*/
#define TV_FrED	(TM_UNIV|TM_PRIM|2)

typedef OSUINT32 FrED;

EXTERN int asn1E_FrED (OSCTXT* pctxt, FrED *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FrED (OSCTXT* pctxt, FrED* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_FrED (OSCTXT* pctxt, FrED value);

EXTERN int OERDec_FrED (OSCTXT* pctxt, FrED* pvalue);

EXTERN int asn1PE_FrED (OSCTXT* pctxt, FrED value);

EXTERN int asn1PD_FrED (OSCTXT* pctxt, FrED* pvalue);

EXTERN void asn1Print_FrED (const char* name, const FrED* pvalue);

EXTERN int asn1PrtToStr_FrED (const char* name, FrED* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_FrED (OSCTXT *pctxt, const char* name, const FrED* pvalue);

EXTERN FrED* asn1Test_FrED (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Terminate                                                 */
/*                                                            */
/**************************************************************/
/*
Terminate ::= ENUMERATED { other(0), serverRequested(1), clientRequested(2), serverShutdown(3), clientShutdown(4), serverCommProblems(5), clientCommProblems(6), ... }
*/
#define TV_Terminate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   other_2 = 0,
   serverRequested = 1,
   clientRequested = 2,
   serverShutdown = 3,
   clientShutdown = 4,
   serverCommProblems = 5,
   clientCommProblems = 6
} Terminate_Root;

typedef OSUINT32 Terminate;

EXTERN int asn1E_Terminate (OSCTXT* pctxt, Terminate *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Terminate (OSCTXT* pctxt, Terminate* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Terminate (OSCTXT* pctxt, Terminate value);

EXTERN int OERDec_Terminate (OSCTXT* pctxt, Terminate* pvalue);

EXTERN int asn1PE_Terminate (OSCTXT* pctxt, Terminate value);

EXTERN int asn1PD_Terminate (OSCTXT* pctxt, Terminate* pvalue);

EXTERN void asn1Print_Terminate (const char* name, const Terminate* pvalue);

EXTERN int asn1PrtToStr_Terminate (const char* name, Terminate* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Terminate (OSCTXT *pctxt, 
   const char* name, const Terminate* pvalue);

EXTERN const OSUTF8CHAR* Terminate_ToString (OSINT32 value);

EXTERN int Terminate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Terminate* pvalue);

EXTERN int Terminate_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, Terminate* pvalue);

EXTERN Terminate* asn1Test_Terminate (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Logout                                                    */
/*                                                            */
/**************************************************************/
/*
Logout ::= ENUMERATED { other(0), serverRequested(1), clientRequested(2), serverShutdown(3), clientShutdown(4), serverCommProblems(5), clientCommProblems(6), ... }
*/
#define TV_Logout	(TM_UNIV|TM_PRIM|10)

typedef enum {
   other_3 = 0,
   serverRequested_1 = 1,
   clientRequested_1 = 2,
   serverShutdown_1 = 3,
   clientShutdown_1 = 4,
   serverCommProblems_1 = 5,
   clientCommProblems_1 = 6
} Logout_Root;

typedef OSUINT32 Logout;

EXTERN int asn1E_Logout (OSCTXT* pctxt, Logout *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Logout (OSCTXT* pctxt, Logout* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_Logout (OSCTXT* pctxt, Logout value);

EXTERN int OERDec_Logout (OSCTXT* pctxt, Logout* pvalue);

EXTERN int asn1PE_Logout (OSCTXT* pctxt, Logout value);

EXTERN int asn1PD_Logout (OSCTXT* pctxt, Logout* pvalue);

EXTERN void asn1Print_Logout (const char* name, const Logout* pvalue);

EXTERN int asn1PrtToStr_Logout (const char* name, Logout* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Logout (OSCTXT *pctxt, 
   const char* name, const Logout* pvalue);

EXTERN const OSUTF8CHAR* Logout_ToString (OSINT32 value);

EXTERN int Logout_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Logout* pvalue);

EXTERN int Logout_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, Logout* pvalue);

EXTERN Logout* asn1Test_Logout (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SubscriptionData_datexSubscribe_Status_cd                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SubscriptionData'
*/
typedef enum {
   new_ = 0,
   update = 1
} SubscriptionData_datexSubscribe_Status_cd_Root;

typedef OSUINT32 SubscriptionData_datexSubscribe_Status_cd;

EXTERN int asn1E_SubscriptionData_datexSubscribe_Status_cd (OSCTXT* pctxt, 
   SubscriptionData_datexSubscribe_Status_cd *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SubscriptionData_datexSubscribe_Status_cd (OSCTXT* pctxt, 
   SubscriptionData_datexSubscribe_Status_cd* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_SubscriptionData_datexSubscribe_Status_cd (OSCTXT* pctxt, SubscriptionData_datexSubscribe_Status_cd value);

EXTERN int OERDec_SubscriptionData_datexSubscribe_Status_cd (OSCTXT* pctxt, SubscriptionData_datexSubscribe_Status_cd* pvalue);

EXTERN int asn1PE_SubscriptionData_datexSubscribe_Status_cd (OSCTXT* pctxt, SubscriptionData_datexSubscribe_Status_cd value);

EXTERN int asn1PD_SubscriptionData_datexSubscribe_Status_cd (OSCTXT* pctxt, SubscriptionData_datexSubscribe_Status_cd* pvalue);

EXTERN void asn1Print_SubscriptionData_datexSubscribe_Status_cd 
   (const char* name, const SubscriptionData_datexSubscribe_Status_cd* pvalue);

EXTERN int asn1PrtToStr_SubscriptionData_datexSubscribe_Status_cd (const char* name, 
   SubscriptionData_datexSubscribe_Status_cd* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SubscriptionData_datexSubscribe_Status_cd (OSCTXT *pctxt, 
   const char* name, const SubscriptionData_datexSubscribe_Status_cd* pvalue);

EXTERN const OSUTF8CHAR* SubscriptionData_datexSubscribe_Status_cd_ToString (OSINT32 value);

EXTERN int SubscriptionData_datexSubscribe_Status_cd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, SubscriptionData_datexSubscribe_Status_cd* pvalue)
      ;

EXTERN int SubscriptionData_datexSubscribe_Status_cd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      SubscriptionData_datexSubscribe_Status_cd* pvalue);

EXTERN SubscriptionData_datexSubscribe_Status_cd*
    asn1Test_SubscriptionData_datexSubscribe_Status_cd (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Time_time_SecondFractions                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Time'
*/
/* Choice context tags */

#define TVC_Time_time_SecondFractions_deci_seconds	(TM_CTXT|TM_PRIM|0)
#define TVC_Time_time_SecondFractions_centi_seconds	(TM_CTXT|TM_PRIM|1)
#define TVC_Time_time_SecondFractions_milliseconds	(TM_CTXT|TM_PRIM|2)

/* Choice tag constants */

#define T_Time_time_SecondFractions_deci_seconds 1
#define T_Time_time_SecondFractions_centi_seconds 2
#define T_Time_time_SecondFractions_milliseconds 3
#define T_Time_time_SecondFractions_extElem1 4

typedef struct EXTERN Time_time_SecondFractions {
   OSINT32 t;
   union {
      /* t = 1 */
      OSUINT8 deci_seconds;
      /* t = 2 */
      OSUINT8 centi_seconds;
      /* t = 3 */
      OSUINT16 milliseconds;
      /* t = 4 */
      ASN1OpenType *extElem1;
   } u;
} Time_time_SecondFractions;

EXTERN int asn1E_Time_time_SecondFractions (OSCTXT* pctxt, 
   Time_time_SecondFractions *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Time_time_SecondFractions (OSCTXT* pctxt, 
   Time_time_SecondFractions* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_Time_time_SecondFractions (OSCTXT* pctxt, Time_time_SecondFractions* pvalue);

EXTERN int OERDec_Time_time_SecondFractions (OSCTXT* pctxt, Time_time_SecondFractions* pvalue);

EXTERN int asn1PE_Time_time_SecondFractions (OSCTXT* pctxt, Time_time_SecondFractions* pvalue);

EXTERN int asn1PD_Time_time_SecondFractions (OSCTXT* pctxt, Time_time_SecondFractions* pvalue);

EXTERN void asn1Print_Time_time_SecondFractions 
   (const char* name, const Time_time_SecondFractions* pvalue);

EXTERN int asn1PrtToStr_Time_time_SecondFractions (const char* name, 
   Time_time_SecondFractions* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Time_time_SecondFractions (OSCTXT *pctxt, 
   const char* name, const Time_time_SecondFractions* pvalue);

EXTERN Time_time_SecondFractions*
    asn1Test_Time_time_SecondFractions (OSCTXT* pctxt);

EXTERN int asn1Init_Time_time_SecondFractions (Time_time_SecondFractions* pvalue);

/**************************************************************/
/*                                                            */
/*  Time_time_Timezone                                        */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Time'
*/
typedef struct EXTERN Time_time_Timezone {
   OSINT8 timezone_Hour_qty;
   OSUINT8 time_Minute_qty;
} Time_time_Timezone;

EXTERN int asn1E_Time_time_Timezone (OSCTXT* pctxt, Time_time_Timezone *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Time_time_Timezone (OSCTXT* pctxt, 
   Time_time_Timezone* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_Time_time_Timezone (OSCTXT* pctxt, Time_time_Timezone* pvalue);

EXTERN int OERDec_Time_time_Timezone (OSCTXT* pctxt, Time_time_Timezone* pvalue);

EXTERN int asn1PE_Time_time_Timezone (OSCTXT* pctxt, Time_time_Timezone* pvalue);

EXTERN int asn1PD_Time_time_Timezone (OSCTXT* pctxt, Time_time_Timezone* pvalue);

EXTERN void asn1Print_Time_time_Timezone 
   (const char* name, const Time_time_Timezone* pvalue);

EXTERN int asn1PrtToStr_Time_time_Timezone (const char* name, 
   Time_time_Timezone* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Time_time_Timezone (OSCTXT *pctxt, 
   const char* name, const Time_time_Timezone* pvalue);

EXTERN Time_time_Timezone* asn1Test_Time_time_Timezone (OSCTXT* pctxt);

EXTERN int asn1Init_Time_time_Timezone (Time_time_Timezone* pvalue);

/**************************************************************/
/*                                                            */
/*  Time                                                      */
/*                                                            */
/**************************************************************/
/*
Time ::= SEQUENCE {
   time-Year-qty [0] INTEGER (-32768..32767) OPTIONAL, -- defaults to current year unless otherwise specified
   time-Month-qty [1] INTEGER (1..12) OPTIONAL, -- defaults to current month unless otherwise specified
   time-Day-qty [2] INTEGER (1..31) OPTIONAL, -- defaults to current day unless otherwise specified
   time-Hour-qty [3] INTEGER (0..23) DEFAULT 0,
   time-Minute-qty [4] INTEGER (0..59) DEFAULT 0,
   time-Second-qty [5] INTEGER (0..60) DEFAULT 0,
   time-SecondFractions [6] CHOICE {
      deci-seconds [0] INTEGER (0..9),
      centi-seconds [1] INTEGER (0..99),
      milliseconds [2] INTEGER (0..999),
      ...
   },
   time-Timezone [7] SEQUENCE {
      timezone-Hour-qty [0] INTEGER (-13..13) DEFAULT 0,
      time-Minute-qty [1] INTEGER (0..59) DEFAULT 0
   } OPTIONAL -- defaults to UTC
}
*/
#define TV_Time	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Time {
   struct {
      unsigned time_Year_qtyPresent : 1;
      unsigned time_Month_qtyPresent : 1;
      unsigned time_Day_qtyPresent : 1;
      unsigned time_TimezonePresent : 1;
   } m;
   OSINT16 time_Year_qty;
   OSUINT8 time_Month_qty;
   OSUINT8 time_Day_qty;
   OSUINT8 time_Hour_qty;
   OSUINT8 time_Minute_qty;
   OSUINT8 time_Second_qty;
   Time_time_SecondFractions time_SecondFractions;
   Time_time_Timezone time_Timezone;
} Time;

EXTERN int asn1E_Time (OSCTXT* pctxt, Time *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Time (OSCTXT* pctxt, Time* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_Time (OSCTXT* pctxt, Time* pvalue);

EXTERN int OERDec_Time (OSCTXT* pctxt, Time* pvalue);

EXTERN int asn1PE_Time (OSCTXT* pctxt, Time* pvalue);

EXTERN int asn1PD_Time (OSCTXT* pctxt, Time* pvalue);

EXTERN void asn1Print_Time (const char* name, const Time* pvalue);

EXTERN int asn1PrtToStr_Time (const char* name, Time* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Time (OSCTXT *pctxt, const char* name, const Time* pvalue);

EXTERN Time* asn1Test_Time (OSCTXT* pctxt);

EXTERN int asn1Init_Time (Time* pvalue);

/**************************************************************/
/*                                                            */
/*  Registered_continuous                                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Registered'
*/
typedef struct EXTERN Registered_continuous {
   struct {
      unsigned datexRegistered_StartTimePresent : 1;
      unsigned datexRegistered_EndTimePresent : 1;
   } m;
   OSUINT32 datexRegistered_UpdateDelay_qty;
   Time datexRegistered_StartTime;
   Time datexRegistered_EndTime;
} Registered_continuous;

EXTERN int asn1E_Registered_continuous (OSCTXT* pctxt, 
   Registered_continuous *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Registered_continuous (OSCTXT* pctxt, 
   Registered_continuous* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_Registered_continuous (OSCTXT* pctxt, Registered_continuous* pvalue);

EXTERN int OERDec_Registered_continuous (OSCTXT* pctxt, Registered_continuous* pvalue);

EXTERN int asn1PE_Registered_continuous (OSCTXT* pctxt, Registered_continuous* pvalue);

EXTERN int asn1PD_Registered_continuous (OSCTXT* pctxt, Registered_continuous* pvalue);

EXTERN void asn1Print_Registered_continuous 
   (const char* name, const Registered_continuous* pvalue);

EXTERN int asn1PrtToStr_Registered_continuous (const char* name, 
   Registered_continuous* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Registered_continuous (OSCTXT *pctxt, 
   const char* name, const Registered_continuous* pvalue);

EXTERN Registered_continuous* asn1Test_Registered_continuous (OSCTXT* pctxt);

EXTERN int asn1Init_Registered_continuous (Registered_continuous* pvalue);

/**************************************************************/
/*                                                            */
/*  Registered_daily_datexRegistered_DaysOfWeek_cd            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Registered'
*/
/* Named bit constants */

#define Registered_daily_datexRegistered_DaysOfWeek_cd_other                           0
#define Registered_daily_datexRegistered_DaysOfWeek_cd_sunday                          1
#define Registered_daily_datexRegistered_DaysOfWeek_cd_monday                          2
#define Registered_daily_datexRegistered_DaysOfWeek_cd_tuesday                         3
#define Registered_daily_datexRegistered_DaysOfWeek_cd_wednesday                       4
#define Registered_daily_datexRegistered_DaysOfWeek_cd_thursday                        5
#define Registered_daily_datexRegistered_DaysOfWeek_cd_friday                          6
#define Registered_daily_datexRegistered_DaysOfWeek_cd_saturday                        7

typedef struct Registered_daily_datexRegistered_DaysOfWeek_cd {
   OSUINT32 numbits;
   OSOCTET data[1];
} Registered_daily_datexRegistered_DaysOfWeek_cd;

EXTERN int asn1E_Registered_daily_datexRegistered_DaysOfWeek_cd (
   OSCTXT* pctxt, Registered_daily_datexRegistered_DaysOfWeek_cd *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Registered_daily_datexRegistered_DaysOfWeek_cd (
   OSCTXT* pctxt, Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Registered_daily_datexRegistered_DaysOfWeek_cd (OSCTXT* pctxt, Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue);

EXTERN int OERDec_Registered_daily_datexRegistered_DaysOfWeek_cd (OSCTXT* pctxt, Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue);

EXTERN int asn1PE_Registered_daily_datexRegistered_DaysOfWeek_cd (OSCTXT* pctxt, Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue);

EXTERN int asn1PD_Registered_daily_datexRegistered_DaysOfWeek_cd (OSCTXT* pctxt, Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue);

EXTERN void asn1Print_Registered_daily_datexRegistered_DaysOfWeek_cd 
   (const char* name, const Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue);

EXTERN int asn1PrtToStr_Registered_daily_datexRegistered_DaysOfWeek_cd (
   const char* name, Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Registered_daily_datexRegistered_DaysOfWeek_cd (OSCTXT *pctxt, 
   const char* name, const Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue);

EXTERN Registered_daily_datexRegistered_DaysOfWeek_cd*
    asn1Test_Registered_daily_datexRegistered_DaysOfWeek_cd (OSCTXT* pctxt);

EXTERN int asn1Init_Registered_daily_datexRegistered_DaysOfWeek_cd (
   Registered_daily_datexRegistered_DaysOfWeek_cd* pvalue);

/**************************************************************/
/*                                                            */
/*  Registered_daily                                          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Registered'
*/
typedef struct EXTERN Registered_daily {
   struct {
      unsigned datexRegistered_StartDatePresent : 1;
      unsigned datexRegistered_EndDatePresent : 1;
      unsigned datexRegistered_StartTimePresent : 1;
      unsigned datexRegistered_Duration_qtyPresent : 1;
   } m;
   OSUINT32 datexRegistered_UpdateDelay_qty;
   Registered_daily_datexRegistered_DaysOfWeek_cd datexRegistered_DaysOfWeek_cd;
   Time datexRegistered_StartDate;
   Time datexRegistered_EndDate;
   Time datexRegistered_StartTime;
   OSUINT16 datexRegistered_Duration_qty;
} Registered_daily;

EXTERN int asn1E_Registered_daily (OSCTXT* pctxt, Registered_daily *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Registered_daily (OSCTXT* pctxt, Registered_daily* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Registered_daily (OSCTXT* pctxt, Registered_daily* pvalue);

EXTERN int OERDec_Registered_daily (OSCTXT* pctxt, Registered_daily* pvalue);

EXTERN int asn1PE_Registered_daily (OSCTXT* pctxt, Registered_daily* pvalue);

EXTERN int asn1PD_Registered_daily (OSCTXT* pctxt, Registered_daily* pvalue);

EXTERN void asn1Print_Registered_daily 
   (const char* name, const Registered_daily* pvalue);

EXTERN int asn1PrtToStr_Registered_daily (const char* name, Registered_daily* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Registered_daily (OSCTXT *pctxt, 
   const char* name, const Registered_daily* pvalue);

EXTERN Registered_daily* asn1Test_Registered_daily (OSCTXT* pctxt);

EXTERN int asn1Init_Registered_daily (Registered_daily* pvalue);

/**************************************************************/
/*                                                            */
/*  Registered                                                */
/*                                                            */
/**************************************************************/
/*
Registered ::= CHOICE {
   continuous [0] SEQUENCE {
      datexRegistered-UpdateDelay-qty [0] INTEGER (0..424967295) DEFAULT 0, -- 0 means as soon as possible
      datexRegistered-StartTime [1] Time OPTIONAL, -- defaults to immediate
      datexRegistered-EndTime [2] Time OPTIONAL -- defaults to "until cancelled"
   },
   daily [1] SEQUENCE {
      datexRegistered-UpdateDelay-qty [0] INTEGER (0..424967295) DEFAULT 0, -- 0 means as soon as possible
      datexRegistered-DaysOfWeek-cd [1] BIT STRING  { other(0), sunday(1), monday(2), tuesday(3), wednesday(4), thursday(5), friday(6), saturday(7) } (SIZE (8)),
      datexRegistered-StartDate [2] Time OPTIONAL, -- defaults to immediate
      datexRegistered-EndDate [3] Time OPTIONAL, -- defaults to "until cancelled"
      datexRegistered-StartTime [4] Time OPTIONAL, -- defaults to midnight
      datexRegistered-Duration-qty [5] INTEGER (0..65535) OPTIONAL -- defaults to 1440 (i.e., 24 hours)
   }
}
*/
/* Choice context tags */

#define TVC_Registered_continuous	(TM_CTXT|TM_CONS|0)
#define TVC_Registered_daily	(TM_CTXT|TM_CONS|1)

/* Choice tag constants */

#define T_Registered_continuous         1
#define T_Registered_daily              2

typedef struct EXTERN Registered {
   OSINT32 t;
   union {
      /* t = 1 */
      Registered_continuous *continuous;
      /* t = 2 */
      Registered_daily *daily;
   } u;
} Registered;

EXTERN int asn1E_Registered (OSCTXT* pctxt, Registered *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Registered (OSCTXT* pctxt, Registered* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Registered (OSCTXT* pctxt, Registered* pvalue);

EXTERN int OERDec_Registered (OSCTXT* pctxt, Registered* pvalue);

EXTERN int asn1PE_Registered (OSCTXT* pctxt, Registered* pvalue);

EXTERN int asn1PD_Registered (OSCTXT* pctxt, Registered* pvalue);

EXTERN void asn1Print_Registered (const char* name, const Registered* pvalue);

EXTERN int asn1PrtToStr_Registered (const char* name, Registered* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Registered (OSCTXT *pctxt, 
   const char* name, const Registered* pvalue);

EXTERN Registered* asn1Test_Registered (OSCTXT* pctxt);

EXTERN int asn1Init_Registered (Registered* pvalue);

/**************************************************************/
/*                                                            */
/*  SubscriptionMode                                          */
/*                                                            */
/**************************************************************/
/*
SubscriptionMode ::= CHOICE {
   single [0] NULL,
   event-driven [1] Registered,
   periodic [2] Registered
}
*/
/* Choice context tags */

#define TVC_SubscriptionMode_single	(TM_CTXT|TM_PRIM|0)
#define TVC_SubscriptionMode_event_driven	(TM_CTXT|TM_CONS|1)
#define TVC_SubscriptionMode_periodic	(TM_CTXT|TM_CONS|2)

/* Choice tag constants */

#define T_SubscriptionMode_single       1
#define T_SubscriptionMode_event_driven 2
#define T_SubscriptionMode_periodic     3

typedef struct EXTERN SubscriptionMode {
   OSINT32 t;
   union {
      /* t = 1 */
      /* t = 2 */
      Registered *event_driven;
      /* t = 3 */
      Registered *periodic;
   } u;
} SubscriptionMode;

EXTERN int asn1E_SubscriptionMode (OSCTXT* pctxt, SubscriptionMode *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_SubscriptionMode (OSCTXT* pctxt, SubscriptionMode* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_SubscriptionMode (OSCTXT* pctxt, SubscriptionMode* pvalue);

EXTERN int OERDec_SubscriptionMode (OSCTXT* pctxt, SubscriptionMode* pvalue);

EXTERN int asn1PE_SubscriptionMode (OSCTXT* pctxt, SubscriptionMode* pvalue);

EXTERN int asn1PD_SubscriptionMode (OSCTXT* pctxt, SubscriptionMode* pvalue);

EXTERN void asn1Print_SubscriptionMode 
   (const char* name, const SubscriptionMode* pvalue);

EXTERN int asn1PrtToStr_SubscriptionMode (const char* name, SubscriptionMode* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SubscriptionMode (OSCTXT *pctxt, 
   const char* name, const SubscriptionMode* pvalue);

EXTERN SubscriptionMode* asn1Test_SubscriptionMode (OSCTXT* pctxt);

EXTERN int asn1Init_SubscriptionMode (SubscriptionMode* pvalue);

/**************************************************************/
/*                                                            */
/*  SubscriptionData_datexSubscribe_PublishFormat_cd          */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SubscriptionData'
*/
typedef enum {
   other_5 = 0,
   ftp = 1,
   tftp = 2,
   dataPacket = 3
} SubscriptionData_datexSubscribe_PublishFormat_cd_Root;

typedef OSUINT32 SubscriptionData_datexSubscribe_PublishFormat_cd;

EXTERN int asn1E_SubscriptionData_datexSubscribe_PublishFormat_cd (
   OSCTXT* pctxt, SubscriptionData_datexSubscribe_PublishFormat_cd *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_SubscriptionData_datexSubscribe_PublishFormat_cd (
   OSCTXT* pctxt, SubscriptionData_datexSubscribe_PublishFormat_cd* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_SubscriptionData_datexSubscribe_PublishFormat_cd (OSCTXT* pctxt, SubscriptionData_datexSubscribe_PublishFormat_cd value);

EXTERN int OERDec_SubscriptionData_datexSubscribe_PublishFormat_cd (OSCTXT* pctxt, SubscriptionData_datexSubscribe_PublishFormat_cd* pvalue);

EXTERN int asn1PE_SubscriptionData_datexSubscribe_PublishFormat_cd (OSCTXT* pctxt, SubscriptionData_datexSubscribe_PublishFormat_cd value);

EXTERN int asn1PD_SubscriptionData_datexSubscribe_PublishFormat_cd (OSCTXT* pctxt, SubscriptionData_datexSubscribe_PublishFormat_cd* pvalue);

EXTERN void asn1Print_SubscriptionData_datexSubscribe_PublishFormat_cd 
   (const char* name, const SubscriptionData_datexSubscribe_PublishFormat_cd* pvalue);

EXTERN int asn1PrtToStr_SubscriptionData_datexSubscribe_PublishFormat_cd (
   const char* name, SubscriptionData_datexSubscribe_PublishFormat_cd* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SubscriptionData_datexSubscribe_PublishFormat_cd (OSCTXT *pctxt, 
   const char* name, const SubscriptionData_datexSubscribe_PublishFormat_cd* pvalue);

EXTERN const OSUTF8CHAR* SubscriptionData_datexSubscribe_PublishFormat_cd_ToString (OSINT32 value);

EXTERN 
   int SubscriptionData_datexSubscribe_PublishFormat_cd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      SubscriptionData_datexSubscribe_PublishFormat_cd* pvalue);

EXTERN 
   int SubscriptionData_datexSubscribe_PublishFormat_cd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      SubscriptionData_datexSubscribe_PublishFormat_cd* pvalue);

EXTERN SubscriptionData_datexSubscribe_PublishFormat_cd*
    asn1Test_SubscriptionData_datexSubscribe_PublishFormat_cd (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SubscriptionData                                          */
/*                                                            */
/**************************************************************/
/*
SubscriptionData ::= SEQUENCE {
   datexSubscribe-Persistent-bool [0] BOOLEAN,
   datexSubscribe-Status-cd [1] ENUMERATED { new(0), update(1) },
   datexSubscribe-Mode [2] SubscriptionMode,
   datexSubscribe-PublishFormat-cd [3] ENUMERATED { other(0), ftp(1), tftp(2), dataPacket(3), ... },
   datexSubscription-Priority-nbr [4] INTEGER (1..10),
   datexSubscribe-Guarantee-bool [5] BOOLEAN,
   datexSubscribe-Pdu [6] MessageFrame
}
*/
#define TV_SubscriptionData	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SubscriptionData {
   OSBOOL datexSubscribe_Persistent_bool;
   SubscriptionData_datexSubscribe_Status_cd datexSubscribe_Status_cd;
   SubscriptionMode datexSubscribe_Mode;
   SubscriptionData_datexSubscribe_PublishFormat_cd datexSubscribe_PublishFormat_cd;
   OSUINT8 datexSubscription_Priority_nbr;
   OSBOOL datexSubscribe_Guarantee_bool;
   MessageFrame datexSubscribe_Pdu;
} SubscriptionData;

EXTERN int asn1E_SubscriptionData (OSCTXT* pctxt, SubscriptionData *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_SubscriptionData (OSCTXT* pctxt, SubscriptionData* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_SubscriptionData (OSCTXT* pctxt, SubscriptionData* pvalue);

EXTERN int OERDec_SubscriptionData (OSCTXT* pctxt, SubscriptionData* pvalue);

EXTERN int asn1PE_SubscriptionData (OSCTXT* pctxt, SubscriptionData* pvalue);

EXTERN int asn1PD_SubscriptionData (OSCTXT* pctxt, SubscriptionData* pvalue);

EXTERN void asn1Print_SubscriptionData 
   (const char* name, const SubscriptionData* pvalue);

EXTERN int asn1PrtToStr_SubscriptionData (const char* name, SubscriptionData* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SubscriptionData (OSCTXT *pctxt, 
   const char* name, const SubscriptionData* pvalue);

EXTERN SubscriptionData* asn1Test_SubscriptionData (OSCTXT* pctxt);

EXTERN int asn1Init_SubscriptionData (SubscriptionData* pvalue);

/**************************************************************/
/*                                                            */
/*  SubscriptionType_datexSubscribe_CancelReason_cd           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'SubscriptionType'
*/
typedef enum {
   other_4 = 0,
   dataNotNeeded = 1,
   errorsInPublication = 2,
   pendingLogout = 3,
   processingMgmt = 4,
   bandwidthMgmt = 5
} SubscriptionType_datexSubscribe_CancelReason_cd_Root;

typedef OSUINT32 SubscriptionType_datexSubscribe_CancelReason_cd;

EXTERN int asn1E_SubscriptionType_datexSubscribe_CancelReason_cd (
   OSCTXT* pctxt, SubscriptionType_datexSubscribe_CancelReason_cd *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_SubscriptionType_datexSubscribe_CancelReason_cd (
   OSCTXT* pctxt, SubscriptionType_datexSubscribe_CancelReason_cd* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_SubscriptionType_datexSubscribe_CancelReason_cd (OSCTXT* pctxt, SubscriptionType_datexSubscribe_CancelReason_cd value);

EXTERN int OERDec_SubscriptionType_datexSubscribe_CancelReason_cd (OSCTXT* pctxt, SubscriptionType_datexSubscribe_CancelReason_cd* pvalue);

EXTERN int asn1PE_SubscriptionType_datexSubscribe_CancelReason_cd (OSCTXT* pctxt, SubscriptionType_datexSubscribe_CancelReason_cd value);

EXTERN int asn1PD_SubscriptionType_datexSubscribe_CancelReason_cd (OSCTXT* pctxt, SubscriptionType_datexSubscribe_CancelReason_cd* pvalue);

EXTERN void asn1Print_SubscriptionType_datexSubscribe_CancelReason_cd 
   (const char* name, const SubscriptionType_datexSubscribe_CancelReason_cd* pvalue);

EXTERN int asn1PrtToStr_SubscriptionType_datexSubscribe_CancelReason_cd (
   const char* name, SubscriptionType_datexSubscribe_CancelReason_cd* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SubscriptionType_datexSubscribe_CancelReason_cd (OSCTXT *pctxt, 
   const char* name, const SubscriptionType_datexSubscribe_CancelReason_cd* pvalue);

EXTERN const OSUTF8CHAR* SubscriptionType_datexSubscribe_CancelReason_cd_ToString (OSINT32 value);

EXTERN 
   int SubscriptionType_datexSubscribe_CancelReason_cd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      SubscriptionType_datexSubscribe_CancelReason_cd* pvalue);

EXTERN 
   int SubscriptionType_datexSubscribe_CancelReason_cd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      SubscriptionType_datexSubscribe_CancelReason_cd* pvalue);

EXTERN SubscriptionType_datexSubscribe_CancelReason_cd*
    asn1Test_SubscriptionType_datexSubscribe_CancelReason_cd (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  SubscriptionType                                          */
/*                                                            */
/**************************************************************/
/*
SubscriptionType ::= CHOICE {
   subscription [0] SubscriptionData,
   datexSubscribe-CancelReason-cd [1] ENUMERATED { other(0), dataNotNeeded(1), errorsInPublication(2), pendingLogout(3), processingMgmt(4), bandwidthMgmt(5), ... }
}
*/
/* Choice context tags */

#define TVC_SubscriptionType_subscription	(TM_CTXT|TM_CONS|0)
#define TVC_SubscriptionType_datexSubscribe_CancelReason_cd	(TM_CTXT|TM_PRIM|1)

/* Choice tag constants */

#define T_SubscriptionType_subscription 1
#define T_SubscriptionType_datexSubscribe_CancelReason_cd 2

typedef struct EXTERN SubscriptionType {
   OSINT32 t;
   union {
      /* t = 1 */
      SubscriptionData *subscription;
      /* t = 2 */
      SubscriptionType_datexSubscribe_CancelReason_cd datexSubscribe_CancelReason_cd;
   } u;
} SubscriptionType;

EXTERN int asn1E_SubscriptionType (OSCTXT* pctxt, SubscriptionType *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_SubscriptionType (OSCTXT* pctxt, SubscriptionType* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_SubscriptionType (OSCTXT* pctxt, SubscriptionType* pvalue);

EXTERN int OERDec_SubscriptionType (OSCTXT* pctxt, SubscriptionType* pvalue);

EXTERN int asn1PE_SubscriptionType (OSCTXT* pctxt, SubscriptionType* pvalue);

EXTERN int asn1PD_SubscriptionType (OSCTXT* pctxt, SubscriptionType* pvalue);

EXTERN void asn1Print_SubscriptionType 
   (const char* name, const SubscriptionType* pvalue);

EXTERN int asn1PrtToStr_SubscriptionType (const char* name, SubscriptionType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SubscriptionType (OSCTXT *pctxt, 
   const char* name, const SubscriptionType* pvalue);

EXTERN SubscriptionType* asn1Test_SubscriptionType (OSCTXT* pctxt);

EXTERN int asn1Init_SubscriptionType (SubscriptionType* pvalue);

/**************************************************************/
/*                                                            */
/*  AlternateRequest                                          */
/*                                                            */
/**************************************************************/
/*
AlternateRequest ::= SubscriptionType
*/
/* Choice context tags */

#define TVC_AlternateRequest_subscription	(TM_CTXT|TM_CONS|0)
#define TVC_AlternateRequest_datexSubscribe_CancelReason_cd	(TM_CTXT|TM_PRIM|1)

typedef SubscriptionType AlternateRequest;

EXTERN int asn1E_AlternateRequest (OSCTXT* pctxt, AlternateRequest *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_AlternateRequest (OSCTXT* pctxt, AlternateRequest* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_AlternateRequest (OSCTXT* pctxt, AlternateRequest* pvalue);

EXTERN int OERDec_AlternateRequest (OSCTXT* pctxt, AlternateRequest* pvalue);

EXTERN int asn1PE_AlternateRequest (OSCTXT* pctxt, AlternateRequest* pvalue);

EXTERN int asn1PD_AlternateRequest (OSCTXT* pctxt, AlternateRequest* pvalue);

EXTERN void asn1Print_AlternateRequest 
   (const char* name, const AlternateRequest* pvalue);

EXTERN int asn1PrtToStr_AlternateRequest (const char* name, AlternateRequest* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AlternateRequest (OSCTXT *pctxt, 
   const char* name, const AlternateRequest* pvalue);

EXTERN AlternateRequest* asn1Test_AlternateRequest (OSCTXT* pctxt);

EXTERN int asn1Init_AlternateRequest (AlternateRequest* pvalue);

/**************************************************************/
/*                                                            */
/*  DatexDataPacket_datex_Version_number                      */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DatexDataPacket'
*/
typedef enum {
   experimental = 0,
   version1 = 1
} DatexDataPacket_datex_Version_number_Root;

typedef OSUINT32 DatexDataPacket_datex_Version_number;

EXTERN int asn1E_DatexDataPacket_datex_Version_number (OSCTXT* pctxt, 
   DatexDataPacket_datex_Version_number *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DatexDataPacket_datex_Version_number (OSCTXT* pctxt, 
   DatexDataPacket_datex_Version_number* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_DatexDataPacket_datex_Version_number (OSCTXT* pctxt, DatexDataPacket_datex_Version_number value);

EXTERN int OERDec_DatexDataPacket_datex_Version_number (OSCTXT* pctxt, DatexDataPacket_datex_Version_number* pvalue);

EXTERN int asn1PE_DatexDataPacket_datex_Version_number (OSCTXT* pctxt, DatexDataPacket_datex_Version_number value);

EXTERN int asn1PD_DatexDataPacket_datex_Version_number (OSCTXT* pctxt, DatexDataPacket_datex_Version_number* pvalue);

EXTERN void asn1Print_DatexDataPacket_datex_Version_number 
   (const char* name, const DatexDataPacket_datex_Version_number* pvalue);

EXTERN int asn1PrtToStr_DatexDataPacket_datex_Version_number (const char* name, 
   DatexDataPacket_datex_Version_number* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DatexDataPacket_datex_Version_number (OSCTXT *pctxt, 
   const char* name, const DatexDataPacket_datex_Version_number* pvalue);

EXTERN const OSUTF8CHAR* DatexDataPacket_datex_Version_number_ToString (OSINT32 value);

EXTERN int DatexDataPacket_datex_Version_number_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DatexDataPacket_datex_Version_number* pvalue);

EXTERN int DatexDataPacket_datex_Version_number_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      DatexDataPacket_datex_Version_number* pvalue);

EXTERN DatexDataPacket_datex_Version_number*
    asn1Test_DatexDataPacket_datex_Version_number (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DatexDataPacket_datex_Crc_nbr                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'DatexDataPacket'
*/
typedef struct EXTERN DatexDataPacket_datex_Crc_nbr {
   OSUINT32 numocts;
   OSOCTET data[2];
} DatexDataPacket_datex_Crc_nbr;

EXTERN int asn1E_DatexDataPacket_datex_Crc_nbr (OSCTXT* pctxt, 
   DatexDataPacket_datex_Crc_nbr *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DatexDataPacket_datex_Crc_nbr (OSCTXT* pctxt, 
   DatexDataPacket_datex_Crc_nbr* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_DatexDataPacket_datex_Crc_nbr (OSCTXT* pctxt, DatexDataPacket_datex_Crc_nbr* pvalue);

EXTERN int OERDec_DatexDataPacket_datex_Crc_nbr (OSCTXT* pctxt, DatexDataPacket_datex_Crc_nbr* pvalue);

EXTERN int asn1PE_DatexDataPacket_datex_Crc_nbr (OSCTXT* pctxt, DatexDataPacket_datex_Crc_nbr* pvalue);

EXTERN int asn1PD_DatexDataPacket_datex_Crc_nbr (OSCTXT* pctxt, DatexDataPacket_datex_Crc_nbr* pvalue);

EXTERN void asn1Print_DatexDataPacket_datex_Crc_nbr 
   (const char* name, const DatexDataPacket_datex_Crc_nbr* pvalue);

EXTERN int asn1PrtToStr_DatexDataPacket_datex_Crc_nbr (const char* name, 
   DatexDataPacket_datex_Crc_nbr* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DatexDataPacket_datex_Crc_nbr (OSCTXT *pctxt, 
   const char* name, const DatexDataPacket_datex_Crc_nbr* pvalue);

EXTERN DatexDataPacket_datex_Crc_nbr*
    asn1Test_DatexDataPacket_datex_Crc_nbr (OSCTXT* pctxt);

EXTERN int asn1Init_DatexDataPacket_datex_Crc_nbr (
   DatexDataPacket_datex_Crc_nbr* pvalue);

/**************************************************************/
/*                                                            */
/*  C2CAuthenticatedMessage_datex_AuthenticationInfo_text     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'C2CAuthenticatedMessage'
*/
typedef struct EXTERN C2CAuthenticatedMessage_datex_AuthenticationInfo_text {
   OSUINT32 numocts;
   OSOCTET data[255];
} C2CAuthenticatedMessage_datex_AuthenticationInfo_text;

EXTERN int asn1E_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (
   OSCTXT* pctxt, 
   C2CAuthenticatedMessage_datex_AuthenticationInfo_text *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (
   OSCTXT* pctxt, 
   C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (OSCTXT* pctxt, C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue);

EXTERN int OERDec_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (OSCTXT* pctxt, C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue);

EXTERN int asn1PE_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (OSCTXT* pctxt, C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue);

EXTERN int asn1PD_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (OSCTXT* pctxt, C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue);

EXTERN void asn1Print_C2CAuthenticatedMessage_datex_AuthenticationInfo_text 
   (const char* name, const C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue);

EXTERN int asn1PrtToStr_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (
   const char* name, 
   C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (OSCTXT *pctxt, 
   const char* name, const C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue);

EXTERN C2CAuthenticatedMessage_datex_AuthenticationInfo_text*
    asn1Test_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_C2CAuthenticatedMessage_datex_AuthenticationInfo_text (
   C2CAuthenticatedMessage_datex_AuthenticationInfo_text* pvalue);

/**************************************************************/
/*                                                            */
/*  Cost_amount_Currency_code                                 */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Cost'
*/
typedef struct EXTERN Cost_amount_Currency_code {
   OSUINT32 numocts;
   OSOCTET data[3];
} Cost_amount_Currency_code;

EXTERN int asn1E_Cost_amount_Currency_code (OSCTXT* pctxt, 
   Cost_amount_Currency_code *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Cost_amount_Currency_code (OSCTXT* pctxt, 
   Cost_amount_Currency_code* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_Cost_amount_Currency_code (OSCTXT* pctxt, Cost_amount_Currency_code* pvalue);

EXTERN int OERDec_Cost_amount_Currency_code (OSCTXT* pctxt, Cost_amount_Currency_code* pvalue);

EXTERN int asn1PE_Cost_amount_Currency_code (OSCTXT* pctxt, Cost_amount_Currency_code* pvalue);

EXTERN int asn1PD_Cost_amount_Currency_code (OSCTXT* pctxt, Cost_amount_Currency_code* pvalue);

EXTERN void asn1Print_Cost_amount_Currency_code 
   (const char* name, const Cost_amount_Currency_code* pvalue);

EXTERN int asn1PrtToStr_Cost_amount_Currency_code (const char* name, 
   Cost_amount_Currency_code* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Cost_amount_Currency_code (OSCTXT *pctxt, 
   const char* name, const Cost_amount_Currency_code* pvalue);

EXTERN Cost_amount_Currency_code*
    asn1Test_Cost_amount_Currency_code (OSCTXT* pctxt);

EXTERN int asn1Init_Cost_amount_Currency_code (Cost_amount_Currency_code* pvalue);

/**************************************************************/
/*                                                            */
/*  Login_datexLogin_Initiator_cd                             */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Login'
*/
typedef enum {
   serverInitiated = 0,
   clientInitiated = 1
} Login_datexLogin_Initiator_cd_Root;

typedef OSUINT32 Login_datexLogin_Initiator_cd;

EXTERN int asn1E_Login_datexLogin_Initiator_cd (OSCTXT* pctxt, 
   Login_datexLogin_Initiator_cd *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Login_datexLogin_Initiator_cd (OSCTXT* pctxt, 
   Login_datexLogin_Initiator_cd* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_Login_datexLogin_Initiator_cd (OSCTXT* pctxt, Login_datexLogin_Initiator_cd value);

EXTERN int OERDec_Login_datexLogin_Initiator_cd (OSCTXT* pctxt, Login_datexLogin_Initiator_cd* pvalue);

EXTERN int asn1PE_Login_datexLogin_Initiator_cd (OSCTXT* pctxt, Login_datexLogin_Initiator_cd value);

EXTERN int asn1PD_Login_datexLogin_Initiator_cd (OSCTXT* pctxt, Login_datexLogin_Initiator_cd* pvalue);

EXTERN void asn1Print_Login_datexLogin_Initiator_cd 
   (const char* name, const Login_datexLogin_Initiator_cd* pvalue);

EXTERN int asn1PrtToStr_Login_datexLogin_Initiator_cd (const char* name, 
   Login_datexLogin_Initiator_cd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Login_datexLogin_Initiator_cd (OSCTXT *pctxt, 
   const char* name, const Login_datexLogin_Initiator_cd* pvalue);

EXTERN const OSUTF8CHAR* Login_datexLogin_Initiator_cd_ToString (OSINT32 value);

EXTERN int Login_datexLogin_Initiator_cd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Login_datexLogin_Initiator_cd* pvalue);

EXTERN int Login_datexLogin_Initiator_cd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      Login_datexLogin_Initiator_cd* pvalue);

EXTERN Login_datexLogin_Initiator_cd*
    asn1Test_Login_datexLogin_Initiator_cd (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PublicationType_datexPublication_Management_cd            */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'PublicationType'
*/
typedef enum {
   temporarilySuspended = 0,
   resume = 1,
   terminate_other = 2,
   terminate_dataNoLongerAvailable = 3,
   terminate_publicationsBeingRejected = 4,
   terminate_PendingShutdown = 5,
   terminate_processingMgmt = 6,
   terminate_bandwidthMgmt = 7,
   terminate_accessDenied = 8,
   unknownRequest = 9
} PublicationType_datexPublication_Management_cd_Root;

typedef OSUINT32 PublicationType_datexPublication_Management_cd;

EXTERN int asn1E_PublicationType_datexPublication_Management_cd (
   OSCTXT* pctxt, PublicationType_datexPublication_Management_cd *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_PublicationType_datexPublication_Management_cd (
   OSCTXT* pctxt, PublicationType_datexPublication_Management_cd* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_PublicationType_datexPublication_Management_cd (OSCTXT* pctxt, PublicationType_datexPublication_Management_cd value);

EXTERN int OERDec_PublicationType_datexPublication_Management_cd (OSCTXT* pctxt, PublicationType_datexPublication_Management_cd* pvalue);

EXTERN int asn1PE_PublicationType_datexPublication_Management_cd (OSCTXT* pctxt, PublicationType_datexPublication_Management_cd value);

EXTERN int asn1PD_PublicationType_datexPublication_Management_cd (OSCTXT* pctxt, PublicationType_datexPublication_Management_cd* pvalue);

EXTERN void asn1Print_PublicationType_datexPublication_Management_cd 
   (const char* name, const PublicationType_datexPublication_Management_cd* pvalue);

EXTERN int asn1PrtToStr_PublicationType_datexPublication_Management_cd (
   const char* name, PublicationType_datexPublication_Management_cd* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PublicationType_datexPublication_Management_cd (OSCTXT *pctxt, 
   const char* name, const PublicationType_datexPublication_Management_cd* pvalue);

EXTERN const OSUTF8CHAR* PublicationType_datexPublication_Management_cd_ToString (OSINT32 value);

EXTERN 
   int PublicationType_datexPublication_Management_cd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      PublicationType_datexPublication_Management_cd* pvalue);

EXTERN 
   int PublicationType_datexPublication_Management_cd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      PublicationType_datexPublication_Management_cd* pvalue);

EXTERN PublicationType_datexPublication_Management_cd*
    asn1Test_PublicationType_datexPublication_Management_cd (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RejectType_datexReject_Login_cd                           */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RejectType'
*/
typedef enum {
   other_6 = 0,
   unknownDomainName = 1,
   accessDenied = 2,
   invalidNamePassword = 3,
   timeoutTooSmall = 4,
   timeoutTooLarge = 5,
   heartbeatTooSmall = 6,
   heartbeatTooLarge = 7,
   sessionExists = 8,
   maxSessionsReached = 9
} RejectType_datexReject_Login_cd_Root;

typedef OSUINT32 RejectType_datexReject_Login_cd;

EXTERN int asn1E_RejectType_datexReject_Login_cd (OSCTXT* pctxt, 
   RejectType_datexReject_Login_cd *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RejectType_datexReject_Login_cd (OSCTXT* pctxt, 
   RejectType_datexReject_Login_cd* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_RejectType_datexReject_Login_cd (OSCTXT* pctxt, RejectType_datexReject_Login_cd value);

EXTERN int OERDec_RejectType_datexReject_Login_cd (OSCTXT* pctxt, RejectType_datexReject_Login_cd* pvalue);

EXTERN int asn1PE_RejectType_datexReject_Login_cd (OSCTXT* pctxt, RejectType_datexReject_Login_cd value);

EXTERN int asn1PD_RejectType_datexReject_Login_cd (OSCTXT* pctxt, RejectType_datexReject_Login_cd* pvalue);

EXTERN void asn1Print_RejectType_datexReject_Login_cd 
   (const char* name, const RejectType_datexReject_Login_cd* pvalue);

EXTERN int asn1PrtToStr_RejectType_datexReject_Login_cd (const char* name, 
   RejectType_datexReject_Login_cd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RejectType_datexReject_Login_cd (OSCTXT *pctxt, 
   const char* name, const RejectType_datexReject_Login_cd* pvalue);

EXTERN const OSUTF8CHAR* RejectType_datexReject_Login_cd_ToString (OSINT32 value);

EXTERN int RejectType_datexReject_Login_cd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RejectType_datexReject_Login_cd* pvalue);

EXTERN int RejectType_datexReject_Login_cd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      RejectType_datexReject_Login_cd* pvalue);

EXTERN RejectType_datexReject_Login_cd*
    asn1Test_RejectType_datexReject_Login_cd (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RejectType_datexReject_Subscription_cd                    */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RejectType'
*/
typedef enum {
   other_7 = 0,
   unknownSubscriptionNbr = 1,
   invalidTimes = 2,
   frequencyTooSmall = 3,
   frequencyTooLarge = 4,
   invalid_mode = 5,
   publishFormatNotSupported = 6,
   unknowSubscriptionMsgId = 7,
   invalidSubscriptionMsgId = 8,
   invalidSubscriptionContent = 9
} RejectType_datexReject_Subscription_cd_Root;

typedef OSUINT32 RejectType_datexReject_Subscription_cd;

EXTERN int asn1E_RejectType_datexReject_Subscription_cd (OSCTXT* pctxt, 
   RejectType_datexReject_Subscription_cd *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RejectType_datexReject_Subscription_cd (OSCTXT* pctxt, 
   RejectType_datexReject_Subscription_cd* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_RejectType_datexReject_Subscription_cd (OSCTXT* pctxt, RejectType_datexReject_Subscription_cd value);

EXTERN int OERDec_RejectType_datexReject_Subscription_cd (OSCTXT* pctxt, RejectType_datexReject_Subscription_cd* pvalue);

EXTERN int asn1PE_RejectType_datexReject_Subscription_cd (OSCTXT* pctxt, RejectType_datexReject_Subscription_cd value);

EXTERN int asn1PD_RejectType_datexReject_Subscription_cd (OSCTXT* pctxt, RejectType_datexReject_Subscription_cd* pvalue);

EXTERN void asn1Print_RejectType_datexReject_Subscription_cd 
   (const char* name, const RejectType_datexReject_Subscription_cd* pvalue);

EXTERN int asn1PrtToStr_RejectType_datexReject_Subscription_cd (const char* name, 
   RejectType_datexReject_Subscription_cd* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RejectType_datexReject_Subscription_cd (OSCTXT *pctxt, 
   const char* name, const RejectType_datexReject_Subscription_cd* pvalue);

EXTERN const OSUTF8CHAR* RejectType_datexReject_Subscription_cd_ToString (OSINT32 value);

EXTERN int RejectType_datexReject_Subscription_cd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RejectType_datexReject_Subscription_cd* pvalue);

EXTERN int RejectType_datexReject_Subscription_cd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      RejectType_datexReject_Subscription_cd* pvalue);

EXTERN RejectType_datexReject_Subscription_cd*
    asn1Test_RejectType_datexReject_Subscription_cd (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  RejectType_datexReject_Publication_cd                     */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'RejectType'
*/
typedef enum {
   other_8 = 0,
   unknownSubscription = 1,
   unknownPublicationNbr = 2,
   invalidPublishFormat = 3,
   unknownPublicationMsgId = 4,
   invalidPublicationMsgId = 5,
   invalidPublicationMsgContent = 6,
   repeatedPublicationNbr = 7
} RejectType_datexReject_Publication_cd_Root;

typedef OSUINT32 RejectType_datexReject_Publication_cd;

EXTERN int asn1E_RejectType_datexReject_Publication_cd (OSCTXT* pctxt, 
   RejectType_datexReject_Publication_cd *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RejectType_datexReject_Publication_cd (OSCTXT* pctxt, 
   RejectType_datexReject_Publication_cd* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_RejectType_datexReject_Publication_cd (OSCTXT* pctxt, RejectType_datexReject_Publication_cd value);

EXTERN int OERDec_RejectType_datexReject_Publication_cd (OSCTXT* pctxt, RejectType_datexReject_Publication_cd* pvalue);

EXTERN int asn1PE_RejectType_datexReject_Publication_cd (OSCTXT* pctxt, RejectType_datexReject_Publication_cd value);

EXTERN int asn1PD_RejectType_datexReject_Publication_cd (OSCTXT* pctxt, RejectType_datexReject_Publication_cd* pvalue);

EXTERN void asn1Print_RejectType_datexReject_Publication_cd 
   (const char* name, const RejectType_datexReject_Publication_cd* pvalue);

EXTERN int asn1PrtToStr_RejectType_datexReject_Publication_cd (const char* name, 
   RejectType_datexReject_Publication_cd* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RejectType_datexReject_Publication_cd (OSCTXT *pctxt, 
   const char* name, const RejectType_datexReject_Publication_cd* pvalue);

EXTERN const OSUTF8CHAR* RejectType_datexReject_Publication_cd_ToString (OSINT32 value);

EXTERN int RejectType_datexReject_Publication_cd_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RejectType_datexReject_Publication_cd* pvalue);

EXTERN int RejectType_datexReject_Publication_cd_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, 
      RejectType_datexReject_Publication_cd* pvalue);

EXTERN RejectType_datexReject_Publication_cd*
    asn1Test_RejectType_datexReject_Publication_cd (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  DatexDataPacket                                           */
/*                                                            */
/**************************************************************/
/*
DatexDataPacket ::= SEQUENCE {
   datex-Version-number [0] ENUMERATED { experimental(0), version1(1), ... },
   datex-Data [1] OCTET STRING,
   datex-Crc-nbr [2] OCTET STRING (SIZE (2))
}
*/
#define TV_DatexDataPacket	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DatexDataPacket {
   DatexDataPacket_datex_Version_number datex_Version_number;
   OSDynOctStr datex_Data;
   DatexDataPacket_datex_Crc_nbr datex_Crc_nbr;
} DatexDataPacket;

EXTERN int asn1E_DatexDataPacket (OSCTXT* pctxt, DatexDataPacket *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_DatexDataPacket (OSCTXT* pctxt, DatexDataPacket* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_DatexDataPacket (OSCTXT* pctxt, DatexDataPacket* pvalue);

EXTERN int OERDec_DatexDataPacket (OSCTXT* pctxt, DatexDataPacket* pvalue);

EXTERN int asn1PE_DatexDataPacket (OSCTXT* pctxt, DatexDataPacket* pvalue);

EXTERN int asn1PD_DatexDataPacket (OSCTXT* pctxt, DatexDataPacket* pvalue);

EXTERN void asn1Print_DatexDataPacket 
   (const char* name, const DatexDataPacket* pvalue);

EXTERN int asn1PrtToStr_DatexDataPacket (const char* name, DatexDataPacket* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_DatexDataPacket (OSCTXT *pctxt, 
   const char* name, const DatexDataPacket* pvalue);

EXTERN DatexDataPacket* asn1Test_DatexDataPacket (OSCTXT* pctxt);

EXTERN int asn1Init_DatexDataPacket (DatexDataPacket* pvalue);

/**************************************************************/
/*                                                            */
/*  Cost                                                      */
/*                                                            */
/**************************************************************/
/*
Cost ::= SEQUENCE {
   amount-Currency-code [0] OCTET STRING (SIZE (3)),
   amount-Factor-quantity [1] INTEGER,
   amount-Quantity-quantity [2] INTEGER
}
*/
#define TV_Cost	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Cost {
   Cost_amount_Currency_code amount_Currency_code;
   OSINT32 amount_Factor_quantity;
   OSINT32 amount_Quantity_quantity;
} Cost;

EXTERN int asn1E_Cost (OSCTXT* pctxt, Cost *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Cost (OSCTXT* pctxt, Cost* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_Cost (OSCTXT* pctxt, Cost* pvalue);

EXTERN int OERDec_Cost (OSCTXT* pctxt, Cost* pvalue);

EXTERN int asn1PE_Cost (OSCTXT* pctxt, Cost* pvalue);

EXTERN int asn1PD_Cost (OSCTXT* pctxt, Cost* pvalue);

EXTERN void asn1Print_Cost (const char* name, const Cost* pvalue);

EXTERN int asn1PrtToStr_Cost (const char* name, Cost* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Cost (OSCTXT *pctxt, const char* name, const Cost* pvalue);

EXTERN Cost* asn1Test_Cost (OSCTXT* pctxt);

EXTERN int asn1Init_Cost (Cost* pvalue);

/**************************************************************/
/*                                                            */
/*  HeaderOptions                                             */
/*                                                            */
/**************************************************************/
/*
HeaderOptions ::= SEQUENCE {
   datex-Origin-text [0] UTF8String (SIZE (0..40)) OPTIONAL,
   datex-OriginAddress-location [1] OCTET STRING OPTIONAL,
   datex-Sender-text [2] UTF8String (SIZE (0..40)) OPTIONAL,
   datex-SenderAddress-location [3] OCTET STRING OPTIONAL,
   datex-Destination-text [4] UTF8String (SIZE (0..40)) OPTIONAL,
   datex-DestinationAddress-location [5] OCTET STRING OPTIONAL,
   datex-Cost [6] Cost OPTIONAL,
   datex-DataPacket-time [7] Time OPTIONAL
}
*/
#define TV_HeaderOptions	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN HeaderOptions {
   struct {
      unsigned datex_Origin_textPresent : 1;
      unsigned datex_OriginAddress_locationPresent : 1;
      unsigned datex_Sender_textPresent : 1;
      unsigned datex_SenderAddress_locationPresent : 1;
      unsigned datex_Destination_textPresent : 1;
      unsigned datex_DestinationAddress_locationPresent : 1;
      unsigned datex_CostPresent : 1;
      unsigned datex_DataPacket_timePresent : 1;
   } m;
   const OSUTF8CHAR* datex_Origin_text;
   OSDynOctStr datex_OriginAddress_location;
   const OSUTF8CHAR* datex_Sender_text;
   OSDynOctStr datex_SenderAddress_location;
   const OSUTF8CHAR* datex_Destination_text;
   OSDynOctStr datex_DestinationAddress_location;
   Cost datex_Cost;
   Time datex_DataPacket_time;
} HeaderOptions;

EXTERN int asn1E_HeaderOptions (OSCTXT* pctxt, HeaderOptions *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_HeaderOptions (OSCTXT* pctxt, HeaderOptions* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_HeaderOptions (OSCTXT* pctxt, HeaderOptions* pvalue);

EXTERN int OERDec_HeaderOptions (OSCTXT* pctxt, HeaderOptions* pvalue);

EXTERN int asn1PE_HeaderOptions (OSCTXT* pctxt, HeaderOptions* pvalue);

EXTERN int asn1PD_HeaderOptions (OSCTXT* pctxt, HeaderOptions* pvalue);

EXTERN void asn1Print_HeaderOptions (const char* name, const HeaderOptions* pvalue);

EXTERN int asn1PrtToStr_HeaderOptions (const char* name, HeaderOptions* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_HeaderOptions (OSCTXT *pctxt, 
   const char* name, const HeaderOptions* pvalue);

EXTERN HeaderOptions* asn1Test_HeaderOptions (OSCTXT* pctxt);

EXTERN int asn1Init_HeaderOptions (HeaderOptions* pvalue);

/**************************************************************/
/*                                                            */
/*  Initiate                                                  */
/*                                                            */
/**************************************************************/
/*
Initiate ::= SEQUENCE {
   datex-Sender-txt [0] UTF8String (SIZE (0..40)),
   datex-Destination-txt [1] UTF8String (SIZE (0..40))
}
*/
#define TV_Initiate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Initiate {
   const OSUTF8CHAR* datex_Sender_txt;
   const OSUTF8CHAR* datex_Destination_txt;
} Initiate;

EXTERN int asn1E_Initiate (OSCTXT* pctxt, Initiate *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Initiate (OSCTXT* pctxt, Initiate* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Initiate (OSCTXT* pctxt, Initiate* pvalue);

EXTERN int OERDec_Initiate (OSCTXT* pctxt, Initiate* pvalue);

EXTERN int asn1PE_Initiate (OSCTXT* pctxt, Initiate* pvalue);

EXTERN int asn1PD_Initiate (OSCTXT* pctxt, Initiate* pvalue);

EXTERN void asn1Print_Initiate (const char* name, const Initiate* pvalue);

EXTERN int asn1PrtToStr_Initiate (const char* name, Initiate* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Initiate (OSCTXT *pctxt, 
   const char* name, const Initiate* pvalue);

EXTERN Initiate* asn1Test_Initiate (OSCTXT* pctxt);

EXTERN int asn1Init_Initiate (Initiate* pvalue);

/**************************************************************/
/*                                                            */
/*  Login_datexLogin_EncodingRules_id                         */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Login'
*/
/* List of ASN1OBJID */
typedef OSRTDList Login_datexLogin_EncodingRules_id;

EXTERN int asn1E_Login_datexLogin_EncodingRules_id (OSCTXT* pctxt, 
   Login_datexLogin_EncodingRules_id *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Login_datexLogin_EncodingRules_id (OSCTXT* pctxt, 
   Login_datexLogin_EncodingRules_id* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_Login_datexLogin_EncodingRules_id (OSCTXT* pctxt, Login_datexLogin_EncodingRules_id* pvalue);

EXTERN int OERDec_Login_datexLogin_EncodingRules_id (OSCTXT* pctxt, Login_datexLogin_EncodingRules_id* pvalue);

EXTERN int asn1PE_Login_datexLogin_EncodingRules_id (OSCTXT* pctxt, Login_datexLogin_EncodingRules_id* pvalue);

EXTERN int asn1PD_Login_datexLogin_EncodingRules_id (OSCTXT* pctxt, Login_datexLogin_EncodingRules_id* pvalue);

EXTERN void asn1Print_Login_datexLogin_EncodingRules_id 
   (const char* name, const Login_datexLogin_EncodingRules_id* pvalue);

EXTERN int asn1PrtToStr_Login_datexLogin_EncodingRules_id (const char* name, 
   Login_datexLogin_EncodingRules_id* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Login_datexLogin_EncodingRules_id (OSCTXT *pctxt, 
   const char* name, const Login_datexLogin_EncodingRules_id* pvalue);

EXTERN Login_datexLogin_EncodingRules_id*
    asn1Test_Login_datexLogin_EncodingRules_id (OSCTXT* pctxt);

EXTERN int asn1Init_Login_datexLogin_EncodingRules_id (
   Login_datexLogin_EncodingRules_id* pvalue);

/**************************************************************/
/*                                                            */
/*  Login                                                     */
/*                                                            */
/**************************************************************/
/*
Login ::= SEQUENCE {
   datex-Sender-txt [0] UTF8String (SIZE (0..40)),
   datex-Destination-txt [1] UTF8String (SIZE (0..40)),
   datexLogin-UserName-txt [2] OCTET STRING,
   datexLogin-Password-txt [3] OCTET STRING,
   datexLogin-EncodingRules-id [4] SEQUENCE OF OBJECT IDENTIFIER,
   datexLogin-HeartbeatDurationMax-qty [5] INTEGER (0..65535),
   datexLogin-ResponseTimeOut-qty [6] INTEGER (0..255),
   datexLogin-Initiator-cd [7] ENUMERATED { serverInitiated(0), clientInitiated(1), ... },
   datexLogin-DatagramSize-qty [8] INTEGER (0..65535)
}
*/
#define TV_Login	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Login {
   const OSUTF8CHAR* datex_Sender_txt;
   const OSUTF8CHAR* datex_Destination_txt;
   OSDynOctStr datexLogin_UserName_txt;
   OSDynOctStr datexLogin_Password_txt;
   Login_datexLogin_EncodingRules_id datexLogin_EncodingRules_id;
   OSUINT16 datexLogin_HeartbeatDurationMax_qty;
   OSUINT8 datexLogin_ResponseTimeOut_qty;
   Login_datexLogin_Initiator_cd datexLogin_Initiator_cd;
   OSUINT16 datexLogin_DatagramSize_qty;
} Login;

EXTERN int asn1E_Login (OSCTXT* pctxt, Login *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Login (OSCTXT* pctxt, Login* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_Login (OSCTXT* pctxt, Login* pvalue);

EXTERN int OERDec_Login (OSCTXT* pctxt, Login* pvalue);

EXTERN int asn1PE_Login (OSCTXT* pctxt, Login* pvalue);

EXTERN int asn1PD_Login (OSCTXT* pctxt, Login* pvalue);

EXTERN void asn1Print_Login (const char* name, const Login* pvalue);

EXTERN int asn1PrtToStr_Login (const char* name, Login* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Login (OSCTXT *pctxt, const char* name, const Login* pvalue);

EXTERN Login* asn1Test_Login (OSCTXT* pctxt);

EXTERN int asn1Init_Login (Login* pvalue);

/**************************************************************/
/*                                                            */
/*  Subscription                                              */
/*                                                            */
/**************************************************************/
/*
Subscription ::= SEQUENCE {
   datexSubscribe-Serial-nbr [0] INTEGER (0..4294967295),
   datexSubscribe-Type [1] SubscriptionType,
   ...
}
*/
#define TV_Subscription	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Subscription {
   OSUINT32 datexSubscribe_Serial_nbr;
   SubscriptionType datexSubscribe_Type;
   OSRTDList extElem1;
} Subscription;

EXTERN int asn1E_Subscription (OSCTXT* pctxt, Subscription *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Subscription (OSCTXT* pctxt, Subscription* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Subscription (OSCTXT* pctxt, Subscription* pvalue);

EXTERN int OERDec_Subscription (OSCTXT* pctxt, Subscription* pvalue);

EXTERN int asn1PE_Subscription (OSCTXT* pctxt, Subscription* pvalue);

EXTERN int asn1PD_Subscription (OSCTXT* pctxt, Subscription* pvalue);

EXTERN void asn1Print_Subscription (const char* name, const Subscription* pvalue);

EXTERN int asn1PrtToStr_Subscription (const char* name, Subscription* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Subscription (OSCTXT *pctxt, 
   const char* name, const Subscription* pvalue);

EXTERN Subscription* asn1Test_Subscription (OSCTXT* pctxt);

EXTERN int asn1Init_Subscription (Subscription* pvalue);

/**************************************************************/
/*                                                            */
/*  PublicationType                                           */
/*                                                            */
/**************************************************************/
/*
PublicationType ::= CHOICE {
   datexPublication-Management-cd [0] ENUMERATED { temporarilySuspended(0), resume(1), terminate-other(2), terminate-dataNoLongerAvailable(3), terminate-publicationsBeingRejected(4), terminate-PendingShutdown(5), terminate-processingMgmt(6), terminate-bandwidthMgmt(7), terminate-accessDenied(8), unknownRequest(9), ... },
   datexPublish-Data [1] MessageFrame
}
*/
/* Choice context tags */

#define TVC_PublicationType_datexPublication_Management_cd	(TM_CTXT|TM_PRIM|0)
#define TVC_PublicationType_datexPublish_Data	(TM_CTXT|TM_CONS|1)

/* Choice tag constants */

#define T_PublicationType_datexPublication_Management_cd 1
#define T_PublicationType_datexPublish_Data 2

typedef struct EXTERN PublicationType {
   OSINT32 t;
   union {
      /* t = 1 */
      PublicationType_datexPublication_Management_cd datexPublication_Management_cd;
      /* t = 2 */
      MessageFrame *datexPublish_Data;
   } u;
} PublicationType;

EXTERN int asn1E_PublicationType (OSCTXT* pctxt, PublicationType *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_PublicationType (OSCTXT* pctxt, PublicationType* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_PublicationType (OSCTXT* pctxt, PublicationType* pvalue);

EXTERN int OERDec_PublicationType (OSCTXT* pctxt, PublicationType* pvalue);

EXTERN int asn1PE_PublicationType (OSCTXT* pctxt, PublicationType* pvalue);

EXTERN int asn1PD_PublicationType (OSCTXT* pctxt, PublicationType* pvalue);

EXTERN void asn1Print_PublicationType 
   (const char* name, const PublicationType* pvalue);

EXTERN int asn1PrtToStr_PublicationType (const char* name, PublicationType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PublicationType (OSCTXT *pctxt, 
   const char* name, const PublicationType* pvalue);

EXTERN PublicationType* asn1Test_PublicationType (OSCTXT* pctxt);

EXTERN int asn1Init_PublicationType (PublicationType* pvalue);

/**************************************************************/
/*                                                            */
/*  PublicationData                                           */
/*                                                            */
/**************************************************************/
/*
PublicationData ::= SEQUENCE {
   datexPublish-SubscribeSerial-nbr [0] INTEGER (0..4294967295),
   datexPublish-Serial-nbr [1] INTEGER (0..4294967295),
   datexPublish-LatePublicationFlag [2] BOOLEAN,
   datexPublish-Type [3] PublicationType
}
*/
#define TV_PublicationData	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PublicationData {
   OSUINT32 datexPublish_SubscribeSerial_nbr;
   OSUINT32 datexPublish_Serial_nbr;
   OSBOOL datexPublish_LatePublicationFlag;
   PublicationType datexPublish_Type;
} PublicationData;

EXTERN int asn1E_PublicationData (OSCTXT* pctxt, PublicationData *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_PublicationData (OSCTXT* pctxt, PublicationData* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_PublicationData (OSCTXT* pctxt, PublicationData* pvalue);

EXTERN int OERDec_PublicationData (OSCTXT* pctxt, PublicationData* pvalue);

EXTERN int asn1PE_PublicationData (OSCTXT* pctxt, PublicationData* pvalue);

EXTERN int asn1PD_PublicationData (OSCTXT* pctxt, PublicationData* pvalue);

EXTERN void asn1Print_PublicationData 
   (const char* name, const PublicationData* pvalue);

EXTERN int asn1PrtToStr_PublicationData (const char* name, PublicationData* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PublicationData (OSCTXT *pctxt, 
   const char* name, const PublicationData* pvalue);

EXTERN PublicationData* asn1Test_PublicationData (OSCTXT* pctxt);

EXTERN int asn1Init_PublicationData (PublicationData* pvalue);

/**************************************************************/
/*                                                            */
/*  _SeqOfPublicationData                                     */
/*                                                            */
/**************************************************************/
/* List of PublicationData */
typedef OSRTDList _SeqOfPublicationData;

EXTERN int asn1E__SeqOfPublicationData (OSCTXT* pctxt, 
   _SeqOfPublicationData *pvalue, ASN1TagType tagging);

EXTERN int asn1D__SeqOfPublicationData (OSCTXT* pctxt, 
   _SeqOfPublicationData* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc__SeqOfPublicationData (OSCTXT* pctxt, _SeqOfPublicationData* pvalue);

EXTERN int OERDec__SeqOfPublicationData (OSCTXT* pctxt, _SeqOfPublicationData* pvalue);

EXTERN int asn1PE__SeqOfPublicationData (OSCTXT* pctxt, _SeqOfPublicationData* pvalue);

EXTERN int asn1PD__SeqOfPublicationData (OSCTXT* pctxt, _SeqOfPublicationData* pvalue);

EXTERN void asn1Print__SeqOfPublicationData 
   (const char* name, const _SeqOfPublicationData* pvalue);

EXTERN int asn1PrtToStr__SeqOfPublicationData (const char* name, 
   _SeqOfPublicationData* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm__SeqOfPublicationData (OSCTXT *pctxt, 
   const char* name, const _SeqOfPublicationData* pvalue);

EXTERN _SeqOfPublicationData* asn1Test__SeqOfPublicationData (OSCTXT* pctxt);

EXTERN int asn1Init__SeqOfPublicationData (_SeqOfPublicationData* pvalue);

/**************************************************************/
/*                                                            */
/*  Publish_Format                                            */
/*                                                            */
/**************************************************************/
/*
Publish-Format ::= CHOICE {
   datexPublish-Data [0] SEQUENCE OF PublicationData,
   datexPublish-FileName-txt [1] UTF8String (SIZE (0..2000))
}
*/
/* Choice context tags */

#define TVC_Publish_Format_datexPublish_Data	(TM_CTXT|TM_CONS|0)
#define TVC_Publish_Format_datexPublish_FileName_txt	(TM_CTXT|TM_PRIM|1)

/* Choice tag constants */

#define T_Publish_Format_datexPublish_Data 1
#define T_Publish_Format_datexPublish_FileName_txt 2

typedef struct EXTERN Publish_Format {
   OSINT32 t;
   union {
      /* t = 1 */
      _SeqOfPublicationData *datexPublish_Data;
      /* t = 2 */
      const OSUTF8CHAR* datexPublish_FileName_txt;
   } u;
} Publish_Format;

EXTERN int asn1E_Publish_Format (OSCTXT* pctxt, Publish_Format *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Publish_Format (OSCTXT* pctxt, Publish_Format* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Publish_Format (OSCTXT* pctxt, Publish_Format* pvalue);

EXTERN int OERDec_Publish_Format (OSCTXT* pctxt, Publish_Format* pvalue);

EXTERN int asn1PE_Publish_Format (OSCTXT* pctxt, Publish_Format* pvalue);

EXTERN int asn1PD_Publish_Format (OSCTXT* pctxt, Publish_Format* pvalue);

EXTERN void asn1Print_Publish_Format (const char* name, const Publish_Format* pvalue);

EXTERN int asn1PrtToStr_Publish_Format (const char* name, Publish_Format* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Publish_Format (OSCTXT *pctxt, 
   const char* name, const Publish_Format* pvalue);

EXTERN Publish_Format* asn1Test_Publish_Format (OSCTXT* pctxt);

EXTERN int asn1Init_Publish_Format (Publish_Format* pvalue);

/**************************************************************/
/*                                                            */
/*  Publication                                               */
/*                                                            */
/**************************************************************/
/*
Publication ::= SEQUENCE {
   datexPublish-Guaranteed-bool [0] BOOLEAN,
   datexPublish-Format [1] Publish-Format
}
*/
#define TV_Publication	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Publication {
   OSBOOL datexPublish_Guaranteed_bool;
   Publish_Format datexPublish_Format;
} Publication;

EXTERN int asn1E_Publication (OSCTXT* pctxt, Publication *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Publication (OSCTXT* pctxt, Publication* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Publication (OSCTXT* pctxt, Publication* pvalue);

EXTERN int OERDec_Publication (OSCTXT* pctxt, Publication* pvalue);

EXTERN int asn1PE_Publication (OSCTXT* pctxt, Publication* pvalue);

EXTERN int asn1PD_Publication (OSCTXT* pctxt, Publication* pvalue);

EXTERN void asn1Print_Publication (const char* name, const Publication* pvalue);

EXTERN int asn1PrtToStr_Publication (const char* name, Publication* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Publication (OSCTXT *pctxt, 
   const char* name, const Publication* pvalue);

EXTERN Publication* asn1Test_Publication (OSCTXT* pctxt);

EXTERN int asn1Init_Publication (Publication* pvalue);

/**************************************************************/
/*                                                            */
/*  TransferDone                                              */
/*                                                            */
/**************************************************************/
/*
TransferDone ::= SEQUENCE {
   datexTransferDone-Publication-nbr [0] INTEGER (0..4294967295),
   datexTransferDone-FileName-txt [1] UTF8String (SIZE (0..2000)),
   datexTransferDone-Success-bool [2] BOOLEAN
}
*/
#define TV_TransferDone	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TransferDone {
   OSUINT32 datexTransferDone_Publication_nbr;
   const OSUTF8CHAR* datexTransferDone_FileName_txt;
   OSBOOL datexTransferDone_Success_bool;
} TransferDone;

EXTERN int asn1E_TransferDone (OSCTXT* pctxt, TransferDone *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_TransferDone (OSCTXT* pctxt, TransferDone* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_TransferDone (OSCTXT* pctxt, TransferDone* pvalue);

EXTERN int OERDec_TransferDone (OSCTXT* pctxt, TransferDone* pvalue);

EXTERN int asn1PE_TransferDone (OSCTXT* pctxt, TransferDone* pvalue);

EXTERN int asn1PD_TransferDone (OSCTXT* pctxt, TransferDone* pvalue);

EXTERN void asn1Print_TransferDone (const char* name, const TransferDone* pvalue);

EXTERN int asn1PrtToStr_TransferDone (const char* name, TransferDone* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_TransferDone (OSCTXT *pctxt, 
   const char* name, const TransferDone* pvalue);

EXTERN TransferDone* asn1Test_TransferDone (OSCTXT* pctxt);

EXTERN int asn1Init_TransferDone (TransferDone* pvalue);

/**************************************************************/
/*                                                            */
/*  Accept_datexAccept_Type                                   */
/*                                                            */
/**************************************************************/
/*
Type was extracted from 'Accept'
*/
/* Choice context tags */

#define TVC_Accept_datexAccept_Type_logIn	(TM_CTXT|TM_PRIM|0)
#define TVC_Accept_datexAccept_Type_single_subscription	(TM_CTXT|TM_PRIM|1)
#define TVC_Accept_datexAccept_Type_registered_subscription	(TM_CTXT|TM_PRIM|2)
#define TVC_Accept_datexAccept_Type_publication	(TM_CTXT|TM_PRIM|3)

/* Choice tag constants */

#define T_Accept_datexAccept_Type_logIn 1
#define T_Accept_datexAccept_Type_single_subscription 2
#define T_Accept_datexAccept_Type_registered_subscription 3
#define T_Accept_datexAccept_Type_publication 4

typedef struct EXTERN Accept_datexAccept_Type {
   OSINT32 t;
   union {
      /* t = 1 */
      ASN1OBJID *logIn;
      /* t = 2 */
      /* t = 3 */
      OSUINT32 registered_subscription;
      /* t = 4 */
   } u;
} Accept_datexAccept_Type;

EXTERN int asn1E_Accept_datexAccept_Type (OSCTXT* pctxt, 
   Accept_datexAccept_Type *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Accept_datexAccept_Type (OSCTXT* pctxt, 
   Accept_datexAccept_Type* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_Accept_datexAccept_Type (OSCTXT* pctxt, Accept_datexAccept_Type* pvalue);

EXTERN int OERDec_Accept_datexAccept_Type (OSCTXT* pctxt, Accept_datexAccept_Type* pvalue);

EXTERN int asn1PE_Accept_datexAccept_Type (OSCTXT* pctxt, Accept_datexAccept_Type* pvalue);

EXTERN int asn1PD_Accept_datexAccept_Type (OSCTXT* pctxt, Accept_datexAccept_Type* pvalue);

EXTERN void asn1Print_Accept_datexAccept_Type 
   (const char* name, const Accept_datexAccept_Type* pvalue);

EXTERN int asn1PrtToStr_Accept_datexAccept_Type (const char* name, 
   Accept_datexAccept_Type* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Accept_datexAccept_Type (OSCTXT *pctxt, 
   const char* name, const Accept_datexAccept_Type* pvalue);

EXTERN Accept_datexAccept_Type*
    asn1Test_Accept_datexAccept_Type (OSCTXT* pctxt);

EXTERN int asn1Init_Accept_datexAccept_Type (Accept_datexAccept_Type* pvalue);

/**************************************************************/
/*                                                            */
/*  Accept                                                    */
/*                                                            */
/**************************************************************/
/*
Accept ::= SEQUENCE {
   datexAccept-Packet-nbr [0] INTEGER (0..4294967295),
   datexAccept-Type [1] CHOICE {
      logIn [0] OBJECT IDENTIFIER,
      single-subscription [1] NULL,
      registered-subscription [2] INTEGER (0..4294967295),
      publication [3] NULL
   }
}
*/
#define TV_Accept	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Accept {
   OSUINT32 datexAccept_Packet_nbr;
   Accept_datexAccept_Type datexAccept_Type;
} Accept;

EXTERN int asn1E_Accept (OSCTXT* pctxt, Accept *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Accept (OSCTXT* pctxt, Accept* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_Accept (OSCTXT* pctxt, Accept* pvalue);

EXTERN int OERDec_Accept (OSCTXT* pctxt, Accept* pvalue);

EXTERN int asn1PE_Accept (OSCTXT* pctxt, Accept* pvalue);

EXTERN int asn1PD_Accept (OSCTXT* pctxt, Accept* pvalue);

EXTERN void asn1Print_Accept (const char* name, const Accept* pvalue);

EXTERN int asn1PrtToStr_Accept (const char* name, Accept* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Accept (OSCTXT *pctxt, 
   const char* name, const Accept* pvalue);

EXTERN Accept* asn1Test_Accept (OSCTXT* pctxt);

EXTERN int asn1Init_Accept (Accept* pvalue);

/**************************************************************/
/*                                                            */
/*  RejectType                                                */
/*                                                            */
/**************************************************************/
/*
RejectType ::= CHOICE {
   datexReject-Login-cd [0] ENUMERATED { other(0), unknownDomainName(1), accessDenied(2), invalidNamePassword(3), timeoutTooSmall(4), timeoutTooLarge(5), heartbeatTooSmall(6), heartbeatTooLarge(7), sessionExists(8), maxSessionsReached(9), ... },
   datexReject-Subscription-cd [1] ENUMERATED { other(0), unknownSubscriptionNbr(1), invalidTimes(2), frequencyTooSmall(3), frequencyTooLarge(4), invalid-mode(5), publishFormatNotSupported(6), unknowSubscriptionMsgId(7), invalidSubscriptionMsgId(8), invalidSubscriptionContent(9), ... },
   datexReject-Publication-cd [2] ENUMERATED { other(0), unknownSubscription(1), unknownPublicationNbr(2), invalidPublishFormat(3), unknownPublicationMsgId(4), invalidPublicationMsgId(5), invalidPublicationMsgContent(6), repeatedPublicationNbr(7), ... }
}
*/
/* Choice context tags */

#define TVC_RejectType_datexReject_Login_cd	(TM_CTXT|TM_PRIM|0)
#define TVC_RejectType_datexReject_Subscription_cd	(TM_CTXT|TM_PRIM|1)
#define TVC_RejectType_datexReject_Publication_cd	(TM_CTXT|TM_PRIM|2)

/* Choice tag constants */

#define T_RejectType_datexReject_Login_cd 1
#define T_RejectType_datexReject_Subscription_cd 2
#define T_RejectType_datexReject_Publication_cd 3

typedef struct EXTERN RejectType {
   OSINT32 t;
   union {
      /* t = 1 */
      RejectType_datexReject_Login_cd datexReject_Login_cd;
      /* t = 2 */
      RejectType_datexReject_Subscription_cd datexReject_Subscription_cd;
      /* t = 3 */
      RejectType_datexReject_Publication_cd datexReject_Publication_cd;
   } u;
} RejectType;

EXTERN int asn1E_RejectType (OSCTXT* pctxt, RejectType *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_RejectType (OSCTXT* pctxt, RejectType* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_RejectType (OSCTXT* pctxt, RejectType* pvalue);

EXTERN int OERDec_RejectType (OSCTXT* pctxt, RejectType* pvalue);

EXTERN int asn1PE_RejectType (OSCTXT* pctxt, RejectType* pvalue);

EXTERN int asn1PD_RejectType (OSCTXT* pctxt, RejectType* pvalue);

EXTERN void asn1Print_RejectType (const char* name, const RejectType* pvalue);

EXTERN int asn1PrtToStr_RejectType (const char* name, RejectType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RejectType (OSCTXT *pctxt, 
   const char* name, const RejectType* pvalue);

EXTERN RejectType* asn1Test_RejectType (OSCTXT* pctxt);

EXTERN int asn1Init_RejectType (RejectType* pvalue);

/**************************************************************/
/*                                                            */
/*  Reject                                                    */
/*                                                            */
/**************************************************************/
/*
Reject ::= SEQUENCE {
   datexReject-Packet-nbr [0] INTEGER (0..4294967295),
   datexReject-Type [1] RejectType,
   datexReject-AlternateRequest [2] AlternateRequest OPTIONAL
}
*/
#define TV_Reject	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Reject {
   struct {
      unsigned datexReject_AlternateRequestPresent : 1;
   } m;
   OSUINT32 datexReject_Packet_nbr;
   RejectType datexReject_Type;
   AlternateRequest datexReject_AlternateRequest;
} Reject;

EXTERN int asn1E_Reject (OSCTXT* pctxt, Reject *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Reject (OSCTXT* pctxt, Reject* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_Reject (OSCTXT* pctxt, Reject* pvalue);

EXTERN int OERDec_Reject (OSCTXT* pctxt, Reject* pvalue);

EXTERN int asn1PE_Reject (OSCTXT* pctxt, Reject* pvalue);

EXTERN int asn1PD_Reject (OSCTXT* pctxt, Reject* pvalue);

EXTERN void asn1Print_Reject (const char* name, const Reject* pvalue);

EXTERN int asn1PrtToStr_Reject (const char* name, Reject* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Reject (OSCTXT *pctxt, 
   const char* name, const Reject* pvalue);

EXTERN Reject* asn1Test_Reject (OSCTXT* pctxt);

EXTERN int asn1Init_Reject (Reject* pvalue);

/**************************************************************/
/*                                                            */
/*  PDUs                                                      */
/*                                                            */
/**************************************************************/
/*
PDUs ::= CHOICE {
   datex-Initiate-null [0] Initiate,
   login [1] Login,
   fred [2] FrED,
   terminate [3] Terminate,
   logout [4] Logout,
   subscription [5] Subscription,
   publication [6] Publication,
   transfer-done [7] TransferDone,
   accept [8] Accept,
   reject [9] Reject
}
*/
/* Choice context tags */

#define TVC_PDUs_datex_Initiate_null	(TM_CTXT|TM_CONS|0)
#define TVC_PDUs_login	(TM_CTXT|TM_CONS|1)
#define TVC_PDUs_fred	(TM_CTXT|TM_PRIM|2)
#define TVC_PDUs_terminate	(TM_CTXT|TM_PRIM|3)
#define TVC_PDUs_logout	(TM_CTXT|TM_PRIM|4)
#define TVC_PDUs_subscription	(TM_CTXT|TM_CONS|5)
#define TVC_PDUs_publication	(TM_CTXT|TM_CONS|6)
#define TVC_PDUs_transfer_done	(TM_CTXT|TM_CONS|7)
#define TVC_PDUs_accept	(TM_CTXT|TM_CONS|8)
#define TVC_PDUs_reject	(TM_CTXT|TM_CONS|9)

/* Choice tag constants */

#define T_PDUs_datex_Initiate_null      1
#define T_PDUs_login                    2
#define T_PDUs_fred                     3
#define T_PDUs_terminate                4
#define T_PDUs_logout                   5
#define T_PDUs_subscription             6
#define T_PDUs_publication              7
#define T_PDUs_transfer_done            8
#define T_PDUs_accept                   9
#define T_PDUs_reject                   10

typedef struct EXTERN PDUs {
   OSINT32 t;
   union {
      /* t = 1 */
      Initiate *datex_Initiate_null;
      /* t = 2 */
      Login *login;
      /* t = 3 */
      FrED fred;
      /* t = 4 */
      Terminate terminate;
      /* t = 5 */
      Logout logout;
      /* t = 6 */
      Subscription *subscription;
      /* t = 7 */
      Publication *publication;
      /* t = 8 */
      TransferDone *transfer_done;
      /* t = 9 */
      Accept *accept;
      /* t = 10 */
      Reject *reject;
   } u;
} PDUs;

EXTERN int asn1E_PDUs (OSCTXT* pctxt, PDUs *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PDUs (OSCTXT* pctxt, PDUs* pvalue, ASN1TagType tagging, 
   int length);

EXTERN int OEREnc_PDUs (OSCTXT* pctxt, PDUs* pvalue);

EXTERN int OERDec_PDUs (OSCTXT* pctxt, PDUs* pvalue);

EXTERN int asn1PE_PDUs (OSCTXT* pctxt, PDUs* pvalue);

EXTERN int asn1PD_PDUs (OSCTXT* pctxt, PDUs* pvalue);

EXTERN void asn1Print_PDUs (const char* name, const PDUs* pvalue);

EXTERN int asn1PrtToStr_PDUs (const char* name, PDUs* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PDUs (OSCTXT *pctxt, const char* name, const PDUs* pvalue);

EXTERN PDUs* asn1Test_PDUs (OSCTXT* pctxt);

EXTERN int asn1Init_PDUs (PDUs* pvalue);

/**************************************************************/
/*                                                            */
/*  C2CAuthenticatedMessage                                   */
/*                                                            */
/**************************************************************/
/*
C2CAuthenticatedMessage ::= SEQUENCE {
   datex-AuthenticationInfo-text [0] OCTET STRING (SIZE (0..255)),
   datex-DataPacket-number [1] INTEGER (0..4294967295),
   datex-DataPacketPriority-number [2] INTEGER (0..10),
   options [3] HeaderOptions,
   pdu [4] PDUs
}
*/
#define TV_C2CAuthenticatedMessage	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN C2CAuthenticatedMessage {
   C2CAuthenticatedMessage_datex_AuthenticationInfo_text datex_AuthenticationInfo_text;
   OSUINT32 datex_DataPacket_number;
   OSUINT8 datex_DataPacketPriority_number;
   HeaderOptions options;
   PDUs pdu;
} C2CAuthenticatedMessage;

EXTERN int asn1E_C2CAuthenticatedMessage (OSCTXT* pctxt, 
   C2CAuthenticatedMessage *pvalue, ASN1TagType tagging);

EXTERN int asn1D_C2CAuthenticatedMessage (OSCTXT* pctxt, 
   C2CAuthenticatedMessage* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_C2CAuthenticatedMessage (OSCTXT* pctxt, C2CAuthenticatedMessage* pvalue);

EXTERN int OERDec_C2CAuthenticatedMessage (OSCTXT* pctxt, C2CAuthenticatedMessage* pvalue);

EXTERN int asn1PE_C2CAuthenticatedMessage (OSCTXT* pctxt, C2CAuthenticatedMessage* pvalue);

EXTERN int asn1PD_C2CAuthenticatedMessage (OSCTXT* pctxt, C2CAuthenticatedMessage* pvalue);

EXTERN void asn1Print_C2CAuthenticatedMessage 
   (const char* name, const C2CAuthenticatedMessage* pvalue);

EXTERN int asn1PrtToStr_C2CAuthenticatedMessage (const char* name, 
   C2CAuthenticatedMessage* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_C2CAuthenticatedMessage (OSCTXT *pctxt, 
   const char* name, const C2CAuthenticatedMessage* pvalue);

EXTERN C2CAuthenticatedMessage*
    asn1Test_C2CAuthenticatedMessage (OSCTXT* pctxt);

EXTERN int asn1Init_C2CAuthenticatedMessage (C2CAuthenticatedMessage* pvalue);

#ifdef __cplusplus
}
#endif

#endif
