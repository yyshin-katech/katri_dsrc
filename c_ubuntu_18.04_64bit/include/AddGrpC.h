/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 7.2.1, Date: 27-Dec-2018.
 */
#ifndef ADDGRPC_H
#define ADDGRPC_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtoersrc/asn1oer.h"
#include "rtpersrc/asn1per.h"

#include "DSRC.h"

/**
 * Header file for ASN.1 module AddGrpC
 */
/**************************************************************/
/*                                                            */
/*  AltitudeConfidence                                        */
/*                                                            */
/**************************************************************/
/*
AltitudeConfidence ::= ENUMERATED { alt-000-01(0), alt-000-02(1), alt-000-05(2), alt-000-10(3), alt-000-20(4), alt-000-50(5), alt-001-00(6), alt-002-00(7), alt-005-00(8), alt-010-00(9), alt-020-00(10), alt-050-00(11), alt-100-00(12), alt-200-00(13), outOfRange(14), unavailable(15) }
*/
#define TV_AltitudeConfidence	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_000_01 = 0,
   alt_000_02 = 1,
   alt_000_05 = 2,
   alt_000_10 = 3,
   alt_000_20 = 4,
   alt_000_50 = 5,
   alt_001_00 = 6,
   alt_002_00 = 7,
   alt_005_00 = 8,
   alt_010_00 = 9,
   alt_020_00 = 10,
   alt_050_00 = 11,
   alt_100_00 = 12,
   alt_200_00 = 13,
   outOfRange = 14,
   unavailable_30 = 15
} AltitudeConfidence_Root;

typedef OSUINT32 AltitudeConfidence;

EXTERN int asn1E_AltitudeConfidence (OSCTXT* pctxt, AltitudeConfidence *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_AltitudeConfidence (OSCTXT* pctxt, 
   AltitudeConfidence* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_AltitudeConfidence (OSCTXT* pctxt, AltitudeConfidence value);

EXTERN int OERDec_AltitudeConfidence (OSCTXT* pctxt, AltitudeConfidence* pvalue);

EXTERN int asn1PE_AltitudeConfidence (OSCTXT* pctxt, AltitudeConfidence value);

EXTERN int asn1PD_AltitudeConfidence (OSCTXT* pctxt, AltitudeConfidence* pvalue);

EXTERN void asn1Print_AltitudeConfidence 
   (const char* name, const AltitudeConfidence* pvalue);

EXTERN int asn1PrtToStr_AltitudeConfidence (const char* name, 
   AltitudeConfidence* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AltitudeConfidence (OSCTXT *pctxt, 
   const char* name, const AltitudeConfidence* pvalue);

EXTERN const OSUTF8CHAR* AltitudeConfidence_ToString (OSINT32 value);

EXTERN int AltitudeConfidence_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, AltitudeConfidence* pvalue);

EXTERN int AltitudeConfidence_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, AltitudeConfidence* pvalue);

EXTERN AltitudeConfidence* asn1Test_AltitudeConfidence (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  AltitudeValue                                             */
/*                                                            */
/**************************************************************/
/*
AltitudeValue ::= INTEGER (-100000..800001)
                                              units of  0.01 meter
    Where:
    seaLevel(0),
    oneCentimeter(1),
    unavailable(800001)

*/
#define TV_AltitudeValue	(TM_UNIV|TM_PRIM|2)

typedef OSINT32 AltitudeValue;

EXTERN int asn1E_AltitudeValue (OSCTXT* pctxt, AltitudeValue *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_AltitudeValue (OSCTXT* pctxt, AltitudeValue* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_AltitudeValue (OSCTXT* pctxt, AltitudeValue value);

EXTERN int OERDec_AltitudeValue (OSCTXT* pctxt, AltitudeValue* pvalue);

EXTERN int asn1PE_AltitudeValue (OSCTXT* pctxt, AltitudeValue value);

EXTERN int asn1PD_AltitudeValue (OSCTXT* pctxt, AltitudeValue* pvalue);

EXTERN void asn1Print_AltitudeValue (const char* name, const AltitudeValue* pvalue);

EXTERN int asn1PrtToStr_AltitudeValue (const char* name, AltitudeValue* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_AltitudeValue (OSCTXT *pctxt, 
   const char* name, const AltitudeValue* pvalue);

EXTERN AltitudeValue* asn1Test_AltitudeValue (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  EmissionType                                              */
/*                                                            */
/**************************************************************/
/*
EmissionType ::= ENUMERATED { typeA(0), typeB(1), typeC(2), typeD(3), typeE(4), ... }
*/
#define TV_EmissionType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   typeA = 0,
   typeB = 1,
   typeC = 2,
   typeD = 3,
   typeE = 4
} EmissionType_Root;

typedef OSUINT32 EmissionType;

EXTERN int asn1E_EmissionType (OSCTXT* pctxt, EmissionType *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_EmissionType (OSCTXT* pctxt, EmissionType* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_EmissionType (OSCTXT* pctxt, EmissionType value);

EXTERN int OERDec_EmissionType (OSCTXT* pctxt, EmissionType* pvalue);

EXTERN int asn1PE_EmissionType (OSCTXT* pctxt, EmissionType value);

EXTERN int asn1PD_EmissionType (OSCTXT* pctxt, EmissionType* pvalue);

EXTERN void asn1Print_EmissionType (const char* name, const EmissionType* pvalue);

EXTERN int asn1PrtToStr_EmissionType (const char* name, EmissionType* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_EmissionType (OSCTXT *pctxt, 
   const char* name, const EmissionType* pvalue);

EXTERN const OSUTF8CHAR* EmissionType_ToString (OSINT32 value);

EXTERN int EmissionType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, EmissionType* pvalue);

EXTERN int EmissionType_ToEnum2 (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OSSIZE valueLen, EmissionType* pvalue);

EXTERN EmissionType* asn1Test_EmissionType (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  Altitude                                                  */
/*                                                            */
/**************************************************************/
/*
Altitude ::= SEQUENCE {
   value [0] AltitudeValue,
   confidence [1] AltitudeConfidence
}
*/
#define TV_Altitude	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Altitude {
   AltitudeValue value;
   AltitudeConfidence confidence;
} Altitude;

EXTERN int asn1E_Altitude (OSCTXT* pctxt, Altitude *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Altitude (OSCTXT* pctxt, Altitude* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_Altitude (OSCTXT* pctxt, Altitude* pvalue);

EXTERN int OERDec_Altitude (OSCTXT* pctxt, Altitude* pvalue);

EXTERN int asn1PE_Altitude (OSCTXT* pctxt, Altitude* pvalue);

EXTERN int asn1PD_Altitude (OSCTXT* pctxt, Altitude* pvalue);

EXTERN void asn1Print_Altitude (const char* name, const Altitude* pvalue);

EXTERN int asn1PrtToStr_Altitude (const char* name, Altitude* pvalue, char* buffer, 
   OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Altitude (OSCTXT *pctxt, 
   const char* name, const Altitude* pvalue);

EXTERN Altitude* asn1Test_Altitude (OSCTXT* pctxt);

/**************************************************************/
/*                                                            */
/*  PrioritizationResponse                                    */
/*                                                            */
/**************************************************************/
/*
PrioritizationResponse ::= SEQUENCE {
   stationID [0] StationID,
                  -- Id of requesting vehicle
                  -- Note that the stationID has to remain unchanged
                  -- during the whole prioritizationprocess
   priorState [1] PrioritizationResponseStatus,
                  -- State of prioritization request
   signalGroup [2] SignalGroupID,
                  -- id of prioritized LaneSet, which will
                  -- be given free way
   ...
}
*/
#define TV_PrioritizationResponse	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PrioritizationResponse {
   StationID stationID;
   PrioritizationResponseStatus priorState;
   SignalGroupID signalGroup;
   OSRTDList extElem1;
} PrioritizationResponse;

EXTERN int asn1E_PrioritizationResponse (OSCTXT* pctxt, 
   PrioritizationResponse *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PrioritizationResponse (OSCTXT* pctxt, 
   PrioritizationResponse* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_PrioritizationResponse (OSCTXT* pctxt, PrioritizationResponse* pvalue);

EXTERN int OERDec_PrioritizationResponse (OSCTXT* pctxt, PrioritizationResponse* pvalue);

EXTERN int asn1PE_PrioritizationResponse (OSCTXT* pctxt, PrioritizationResponse* pvalue);

EXTERN int asn1PD_PrioritizationResponse (OSCTXT* pctxt, PrioritizationResponse* pvalue);

EXTERN void asn1Print_PrioritizationResponse 
   (const char* name, const PrioritizationResponse* pvalue);

EXTERN int asn1PrtToStr_PrioritizationResponse (const char* name, 
   PrioritizationResponse* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PrioritizationResponse (OSCTXT *pctxt, 
   const char* name, const PrioritizationResponse* pvalue);

EXTERN PrioritizationResponse* asn1Test_PrioritizationResponse (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_PrioritizationResponse (PrioritizationResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  PrioritizationResponseList                                */
/*                                                            */
/**************************************************************/
/*
PrioritizationResponseList ::= SEQUENCE (SIZE (1..10)) OF PrioritizationResponse
*/
#define TV_PrioritizationResponseList	(TM_UNIV|TM_CONS|16)

/* List of PrioritizationResponse */
typedef OSRTDList PrioritizationResponseList;

EXTERN int asn1E_PrioritizationResponseList (OSCTXT* pctxt, 
   PrioritizationResponseList *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PrioritizationResponseList (OSCTXT* pctxt, 
   PrioritizationResponseList* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_PrioritizationResponseList (OSCTXT* pctxt, PrioritizationResponseList* pvalue);

EXTERN int OERDec_PrioritizationResponseList (OSCTXT* pctxt, PrioritizationResponseList* pvalue);

EXTERN int asn1PE_PrioritizationResponseList (OSCTXT* pctxt, PrioritizationResponseList* pvalue);

EXTERN int asn1PD_PrioritizationResponseList (OSCTXT* pctxt, PrioritizationResponseList* pvalue);

EXTERN void asn1Print_PrioritizationResponseList 
   (const char* name, const PrioritizationResponseList* pvalue);

EXTERN int asn1PrtToStr_PrioritizationResponseList (const char* name, 
   PrioritizationResponseList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_PrioritizationResponseList (OSCTXT *pctxt, 
   const char* name, const PrioritizationResponseList* pvalue);

EXTERN PrioritizationResponseList*
    asn1Test_PrioritizationResponseList (OSCTXT* pctxt);

EXTERN int asn1Init_PrioritizationResponseList (PrioritizationResponseList* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleToLanePosition                                     */
/*                                                            */
/**************************************************************/
/*
VehicleToLanePosition ::= SEQUENCE {
   stationID [0] StationID,
   laneID [1] LaneID,
   ...
}
*/
#define TV_VehicleToLanePosition	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN VehicleToLanePosition {
   StationID stationID;
   LaneID laneID;
   OSRTDList extElem1;
} VehicleToLanePosition;

EXTERN int asn1E_VehicleToLanePosition (OSCTXT* pctxt, 
   VehicleToLanePosition *pvalue, ASN1TagType tagging);

EXTERN int asn1D_VehicleToLanePosition (OSCTXT* pctxt, 
   VehicleToLanePosition* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_VehicleToLanePosition (OSCTXT* pctxt, VehicleToLanePosition* pvalue);

EXTERN int OERDec_VehicleToLanePosition (OSCTXT* pctxt, VehicleToLanePosition* pvalue);

EXTERN int asn1PE_VehicleToLanePosition (OSCTXT* pctxt, VehicleToLanePosition* pvalue);

EXTERN int asn1PD_VehicleToLanePosition (OSCTXT* pctxt, VehicleToLanePosition* pvalue);

EXTERN void asn1Print_VehicleToLanePosition 
   (const char* name, const VehicleToLanePosition* pvalue);

EXTERN int asn1PrtToStr_VehicleToLanePosition (const char* name, 
   VehicleToLanePosition* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_VehicleToLanePosition (OSCTXT *pctxt, 
   const char* name, const VehicleToLanePosition* pvalue);

EXTERN VehicleToLanePosition* asn1Test_VehicleToLanePosition (OSCTXT* pctxt);

EXTERN int asn1Init_VehicleToLanePosition (VehicleToLanePosition* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleToLanePositionList                                 */
/*                                                            */
/**************************************************************/
/*
VehicleToLanePositionList ::= SEQUENCE (SIZE (1..5)) OF VehicleToLanePosition
*/
#define TV_VehicleToLanePositionList	(TM_UNIV|TM_CONS|16)

/* List of VehicleToLanePosition */
typedef OSRTDList VehicleToLanePositionList;

EXTERN int asn1E_VehicleToLanePositionList (OSCTXT* pctxt, 
   VehicleToLanePositionList *pvalue, ASN1TagType tagging);

EXTERN int asn1D_VehicleToLanePositionList (OSCTXT* pctxt, 
   VehicleToLanePositionList* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_VehicleToLanePositionList (OSCTXT* pctxt, VehicleToLanePositionList* pvalue);

EXTERN int OERDec_VehicleToLanePositionList (OSCTXT* pctxt, VehicleToLanePositionList* pvalue);

EXTERN int asn1PE_VehicleToLanePositionList (OSCTXT* pctxt, VehicleToLanePositionList* pvalue);

EXTERN int asn1PD_VehicleToLanePositionList (OSCTXT* pctxt, VehicleToLanePositionList* pvalue);

EXTERN void asn1Print_VehicleToLanePositionList 
   (const char* name, const VehicleToLanePositionList* pvalue);

EXTERN int asn1PrtToStr_VehicleToLanePositionList (const char* name, 
   VehicleToLanePositionList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_VehicleToLanePositionList (OSCTXT *pctxt, 
   const char* name, const VehicleToLanePositionList* pvalue);

EXTERN VehicleToLanePositionList*
    asn1Test_VehicleToLanePositionList (OSCTXT* pctxt);

EXTERN int asn1Init_VehicleToLanePositionList (VehicleToLanePositionList* pvalue);

/**************************************************************/
/*                                                            */
/*  ConnectionManeuverAssist_addGrpC                          */
/*                                                            */
/**************************************************************/
/*
ConnectionManeuverAssist-addGrpC ::= SEQUENCE {
   vehicleToLanePositions [0] VehicleToLanePositionList,
   rsuDistanceFromAnchor [1] NodeOffsetPointXY OPTIONAL
}
*/
#define TV_ConnectionManeuverAssist_addGrpC	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ConnectionManeuverAssist_addGrpC {
   struct {
      unsigned rsuDistanceFromAnchorPresent : 1;
   } m;
   VehicleToLanePositionList vehicleToLanePositions;
   NodeOffsetPointXY rsuDistanceFromAnchor;
} ConnectionManeuverAssist_addGrpC;

EXTERN int asn1E_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, 
   ConnectionManeuverAssist_addGrpC *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, 
   ConnectionManeuverAssist_addGrpC* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN int OERDec_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN int asn1PE_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN int asn1PD_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt, ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN void asn1Print_ConnectionManeuverAssist_addGrpC 
   (const char* name, const ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN int asn1PrtToStr_ConnectionManeuverAssist_addGrpC (const char* name, 
   ConnectionManeuverAssist_addGrpC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_ConnectionManeuverAssist_addGrpC (OSCTXT *pctxt, 
   const char* name, const ConnectionManeuverAssist_addGrpC* pvalue);

EXTERN ConnectionManeuverAssist_addGrpC*
    asn1Test_ConnectionManeuverAssist_addGrpC (OSCTXT* pctxt);

EXTERN int asn1Init_ConnectionManeuverAssist_addGrpC (
   ConnectionManeuverAssist_addGrpC* pvalue);

/**************************************************************/
/*                                                            */
/*  IntersectionState_addGrpC                                 */
/*                                                            */
/**************************************************************/
/*
IntersectionState-addGrpC ::= SEQUENCE {
   activePrioritizations [0] PrioritizationResponseList OPTIONAL,
   ...
}
*/
#define TV_IntersectionState_addGrpC	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN IntersectionState_addGrpC {
   struct {
      unsigned activePrioritizationsPresent : 1;
   } m;
   PrioritizationResponseList activePrioritizations;
   OSRTDList extElem1;
} IntersectionState_addGrpC;

EXTERN int asn1E_IntersectionState_addGrpC (OSCTXT* pctxt, 
   IntersectionState_addGrpC *pvalue, ASN1TagType tagging);

EXTERN int asn1D_IntersectionState_addGrpC (OSCTXT* pctxt, 
   IntersectionState_addGrpC* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_IntersectionState_addGrpC (OSCTXT* pctxt, IntersectionState_addGrpC* pvalue);

EXTERN int OERDec_IntersectionState_addGrpC (OSCTXT* pctxt, IntersectionState_addGrpC* pvalue);

EXTERN int asn1PE_IntersectionState_addGrpC (OSCTXT* pctxt, IntersectionState_addGrpC* pvalue);

EXTERN int asn1PD_IntersectionState_addGrpC (OSCTXT* pctxt, IntersectionState_addGrpC* pvalue);

EXTERN void asn1Print_IntersectionState_addGrpC 
   (const char* name, const IntersectionState_addGrpC* pvalue);

EXTERN int asn1PrtToStr_IntersectionState_addGrpC (const char* name, 
   IntersectionState_addGrpC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_IntersectionState_addGrpC (OSCTXT *pctxt, 
   const char* name, const IntersectionState_addGrpC* pvalue);

EXTERN IntersectionState_addGrpC*
    asn1Test_IntersectionState_addGrpC (OSCTXT* pctxt);

EXTERN int asn1Init_IntersectionState_addGrpC (IntersectionState_addGrpC* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalHeadLocation                                        */
/*                                                            */
/**************************************************************/
/*
SignalHeadLocation ::= SEQUENCE {
   node [0] NodeOffsetPointXY, -- the location
   signalGroupID [1] SignalGroupID,
   ...
}
*/
#define TV_SignalHeadLocation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SignalHeadLocation {
   NodeOffsetPointXY node;
   SignalGroupID signalGroupID;
   OSRTDList extElem1;
} SignalHeadLocation;

EXTERN int asn1E_SignalHeadLocation (OSCTXT* pctxt, SignalHeadLocation *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_SignalHeadLocation (OSCTXT* pctxt, 
   SignalHeadLocation* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_SignalHeadLocation (OSCTXT* pctxt, SignalHeadLocation* pvalue);

EXTERN int OERDec_SignalHeadLocation (OSCTXT* pctxt, SignalHeadLocation* pvalue);

EXTERN int asn1PE_SignalHeadLocation (OSCTXT* pctxt, SignalHeadLocation* pvalue);

EXTERN int asn1PD_SignalHeadLocation (OSCTXT* pctxt, SignalHeadLocation* pvalue);

EXTERN void asn1Print_SignalHeadLocation 
   (const char* name, const SignalHeadLocation* pvalue);

EXTERN int asn1PrtToStr_SignalHeadLocation (const char* name, 
   SignalHeadLocation* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SignalHeadLocation (OSCTXT *pctxt, 
   const char* name, const SignalHeadLocation* pvalue);

EXTERN SignalHeadLocation* asn1Test_SignalHeadLocation (OSCTXT* pctxt);

EXTERN int asn1Init_SignalHeadLocation (SignalHeadLocation* pvalue);

/**************************************************************/
/*                                                            */
/*  SignalHeadLocationList                                    */
/*                                                            */
/**************************************************************/
/*
SignalHeadLocationList ::= SEQUENCE (SIZE (1..20)) OF SignalHeadLocation
*/
#define TV_SignalHeadLocationList	(TM_UNIV|TM_CONS|16)

/* List of SignalHeadLocation */
typedef OSRTDList SignalHeadLocationList;

EXTERN int asn1E_SignalHeadLocationList (OSCTXT* pctxt, 
   SignalHeadLocationList *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SignalHeadLocationList (OSCTXT* pctxt, 
   SignalHeadLocationList* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_SignalHeadLocationList (OSCTXT* pctxt, SignalHeadLocationList* pvalue);

EXTERN int OERDec_SignalHeadLocationList (OSCTXT* pctxt, SignalHeadLocationList* pvalue);

EXTERN int asn1PE_SignalHeadLocationList (OSCTXT* pctxt, SignalHeadLocationList* pvalue);

EXTERN int asn1PD_SignalHeadLocationList (OSCTXT* pctxt, SignalHeadLocationList* pvalue);

EXTERN void asn1Print_SignalHeadLocationList 
   (const char* name, const SignalHeadLocationList* pvalue);

EXTERN int asn1PrtToStr_SignalHeadLocationList (const char* name, 
   SignalHeadLocationList* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_SignalHeadLocationList (OSCTXT *pctxt, 
   const char* name, const SignalHeadLocationList* pvalue);

EXTERN SignalHeadLocationList* asn1Test_SignalHeadLocationList (OSCTXT* pctxt)
   ;

EXTERN int asn1Init_SignalHeadLocationList (SignalHeadLocationList* pvalue);

/**************************************************************/
/*                                                            */
/*  MapData_addGrpC                                           */
/*                                                            */
/**************************************************************/
/*
MapData-addGrpC ::= SEQUENCE {
   signalHeadLocations [0] SignalHeadLocationList OPTIONAL,
   ...
}
*/
#define TV_MapData_addGrpC	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MapData_addGrpC {
   struct {
      unsigned signalHeadLocationsPresent : 1;
   } m;
   SignalHeadLocationList signalHeadLocations;
   OSRTDList extElem1;
} MapData_addGrpC;

EXTERN int asn1E_MapData_addGrpC (OSCTXT* pctxt, MapData_addGrpC *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_MapData_addGrpC (OSCTXT* pctxt, MapData_addGrpC* pvalue, 
   ASN1TagType tagging, int length);

EXTERN int OEREnc_MapData_addGrpC (OSCTXT* pctxt, MapData_addGrpC* pvalue);

EXTERN int OERDec_MapData_addGrpC (OSCTXT* pctxt, MapData_addGrpC* pvalue);

EXTERN int asn1PE_MapData_addGrpC (OSCTXT* pctxt, MapData_addGrpC* pvalue);

EXTERN int asn1PD_MapData_addGrpC (OSCTXT* pctxt, MapData_addGrpC* pvalue);

EXTERN void asn1Print_MapData_addGrpC 
   (const char* name, const MapData_addGrpC* pvalue);

EXTERN int asn1PrtToStr_MapData_addGrpC (const char* name, MapData_addGrpC* pvalue, 
   char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_MapData_addGrpC (OSCTXT *pctxt, 
   const char* name, const MapData_addGrpC* pvalue);

EXTERN MapData_addGrpC* asn1Test_MapData_addGrpC (OSCTXT* pctxt);

EXTERN int asn1Init_MapData_addGrpC (MapData_addGrpC* pvalue);

/**************************************************************/
/*                                                            */
/*  Position3D_addGrpC                                        */
/*                                                            */
/**************************************************************/
/*
Position3D-addGrpC ::= SEQUENCE {
   altitude [0] Altitude,
   ...
}
*/
#define TV_Position3D_addGrpC	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Position3D_addGrpC {
   Altitude altitude;
   OSRTDList extElem1;
} Position3D_addGrpC;

EXTERN int asn1E_Position3D_addGrpC (OSCTXT* pctxt, Position3D_addGrpC *pvalue,
    ASN1TagType tagging);

EXTERN int asn1D_Position3D_addGrpC (OSCTXT* pctxt, 
   Position3D_addGrpC* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_Position3D_addGrpC (OSCTXT* pctxt, Position3D_addGrpC* pvalue);

EXTERN int OERDec_Position3D_addGrpC (OSCTXT* pctxt, Position3D_addGrpC* pvalue);

EXTERN int asn1PE_Position3D_addGrpC (OSCTXT* pctxt, Position3D_addGrpC* pvalue);

EXTERN int asn1PD_Position3D_addGrpC (OSCTXT* pctxt, Position3D_addGrpC* pvalue);

EXTERN void asn1Print_Position3D_addGrpC 
   (const char* name, const Position3D_addGrpC* pvalue);

EXTERN int asn1PrtToStr_Position3D_addGrpC (const char* name, 
   Position3D_addGrpC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_Position3D_addGrpC (OSCTXT *pctxt, 
   const char* name, const Position3D_addGrpC* pvalue);

EXTERN Position3D_addGrpC* asn1Test_Position3D_addGrpC (OSCTXT* pctxt);

EXTERN int asn1Init_Position3D_addGrpC (Position3D_addGrpC* pvalue);

/**************************************************************/
/*                                                            */
/*  RestrictionUserType_addGrpC                               */
/*                                                            */
/**************************************************************/
/*
RestrictionUserType-addGrpC ::= SEQUENCE {
   emission [0] EmissionType OPTIONAL,
   ...
}
*/
#define TV_RestrictionUserType_addGrpC	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RestrictionUserType_addGrpC {
   struct {
      unsigned emissionPresent : 1;
   } m;
   EmissionType emission;
   OSRTDList extElem1;
} RestrictionUserType_addGrpC;

EXTERN int asn1E_RestrictionUserType_addGrpC (OSCTXT* pctxt, 
   RestrictionUserType_addGrpC *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RestrictionUserType_addGrpC (OSCTXT* pctxt, 
   RestrictionUserType_addGrpC* pvalue, ASN1TagType tagging, int length);

EXTERN int OEREnc_RestrictionUserType_addGrpC (OSCTXT* pctxt, RestrictionUserType_addGrpC* pvalue);

EXTERN int OERDec_RestrictionUserType_addGrpC (OSCTXT* pctxt, RestrictionUserType_addGrpC* pvalue);

EXTERN int asn1PE_RestrictionUserType_addGrpC (OSCTXT* pctxt, RestrictionUserType_addGrpC* pvalue);

EXTERN int asn1PD_RestrictionUserType_addGrpC (OSCTXT* pctxt, RestrictionUserType_addGrpC* pvalue);

EXTERN void asn1Print_RestrictionUserType_addGrpC 
   (const char* name, const RestrictionUserType_addGrpC* pvalue);

EXTERN int asn1PrtToStr_RestrictionUserType_addGrpC (const char* name, 
   RestrictionUserType_addGrpC* pvalue, char* buffer, OSSIZE bufSize);

EXTERN int asn1PrtToStrm_RestrictionUserType_addGrpC (OSCTXT *pctxt, 
   const char* name, const RestrictionUserType_addGrpC* pvalue);

EXTERN RestrictionUserType_addGrpC*
    asn1Test_RestrictionUserType_addGrpC (OSCTXT* pctxt);

EXTERN int asn1Init_RestrictionUserType_addGrpC (RestrictionUserType_addGrpC* pvalue);

#ifdef __cplusplus
}
#endif

#endif
